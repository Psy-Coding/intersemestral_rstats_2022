{
  "articles": [
    {
      "path": "about.html",
      "title": "Acerca de este sitio",
      "description": "Este curso fue organizado por Psycoding, una organización conformada por estudiantes de pregrado, egresadas/os, académicas/os y otras personas interesadas en la programación. Operamos en la Facultad de Psicología de la UNAM, campus Ciudad Universitaria. Buscamos fomentar la educación tecnológica y la inclusión de la programación en la Psicología y la ciencia en general. Las y los miembros de Psycoding manejan principalmente los siguientes lenguajes de programación: Python, R y Arduino. Las actividades de nuestra comunidad se centran en el desarrollo y aprendizaje de los principios de estos lenguajes, sin embargo, nos consideramos un grupo inclusivo que admite en su comunidad a quienes manejan otros lenguajes. Lo que nos une es nuestro gusto e interés por el bello mundo de la programación.",
      "author": [],
      "contents": "\nPonentes\nDra. Azalea Reyes\nPsic. Emma Botello emma.botello@psycoding.org\nPsic. Juan Díaz juan.diaz@psycoding.org\nPsic. Ana González ana.gonzalez@psycoding.org\nPsic. Scarlett Escudero scarlett.escudero@psycoding.org\nBiol. Edgar Morales edgar.morales@psycoding.org\n\n\n\n",
      "last_modified": "2021-12-17T22:27:35+00:00"
    },
    {
      "path": "aritmetica_y_operaciones.html",
      "title": "Aritmética y operaciones lógicas en R",
      "author": [
        {
          "name": "Scarlett Escudero",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nObjetos\nUn objeto es un nombre/una unidad que puede utilizar para recuperar los datos almacenados o tareas almacenadas. Por ejemplo, puede guardar datos en un objeto como a o b.\nPara crear un objeto R, elija un nombre y luego use el símbolo menor que, <, seguido de un signo menos, -, para guardar los datos en él. Esta combinación parece una flecha hacia la izquierda <-\nPuede nombrar un objeto en R casi cualquier cosa que desee, pero hay algunas reglas: * No puede comenzar con un número * No puede usar algunos símbolos especiales, como ^, !, $, @, +, -, /, , :  No puede llevar espacios * De preferencia no usar el nombre de funciones preexistentes en R, como pi\nNota: R sobrescribirá cualquier información previa almacenada en un objeto sin pedirle permiso. Por lo tanto, es una buena idea no usar nombres que ya están en uso, a menos que eso es algo que tú quieras.\n\n\na <- 5\na\nb <- 6\nb\n#Observen cómo se van creando los objetos/variables en el environment\n#texto_1 <- Este es un texto\ntexto_1 <- \"Este es un texto\"\ntexto_1 <- 'Este también es un texto'\n\n#cadena_num <- 1,2,3,4,5\ncadena_num <- c(1,2,3,4,5)\ncadena_text <- c(\"Hola\", \"Qué tal\", 'Todo bien', '     Qué bueno')\n\nx <- 15\nx <- 55\nx\n\n\n\nAritmética en R\n+ Adición\n- Sustracción\n* Multiplicación\n/ División\n^ Exponente\n\n\n1 + 2 - (3 * 4 / 5) ^ 6\noperacion <- (1 + 2) - (3 * 4) / 5  #Igual lo pueden hacer directamente en la consola\n\na+b\nc <- a + b\n#variable <- texto_1 + a\n#c_text <- \"a\"+\"b\"\nnumeros <- c(\"1\", \"2\", \"3\")\n\n\n\nTarea rápida: \nTarea “larga”: \n\n\nedad <- c(22, 23, 22, 20, 18, 21, 25, 22, 20, 20, 22, 19)\nestatura <- c(164, 160, 155, 173, 168, 185, 158, 187, 165, 160, 156, 179)\npeso <- c(59, 60, 88, 92, 77, 62, 68, 95, 63, 72, 95, 66)\nestatura <- estatura/100\nIMC <- peso/estatura^2\n\n\n\nOperaciones lógicas\n!= No Igual\n== Igual\n< Menor que\n> Mayor que\n<= Menor que o igual\n>= Mayor que o igual\n& (and)\n(or)\n! no\n\n\nx <- 0.5\n0 < x \nx > 10\nx <= .0005\n\nx <- 1:3\ny <- 1:3\nz <- c(0,1,2)\nz <- c(1,2,5)\n\nx == y\nx == z\nx != z\n\nverdadero <- T\nverdadero == F\n\n\n\n\n\n\n",
      "last_modified": "2021-12-17T22:27:36+00:00"
    },
    {
      "path": "comandos_basicos.html",
      "title": "1.2 Comandos básicos",
      "description": "Comandos básicos, interfaz de R-studio y ambiente\n",
      "author": [
        {
          "name": "Emma Botello",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n¿Qué es R?\nUn lenguaje y un entorno de programación que dispone de:\nAlmacenamiento y manipulación de datos.\nOperadores para cálculo.\nHerramientas para análisis de datos.\nPosibilidades gráficas para análisis de datos.\nCabe aclarar que R no está propiamente diseñado como sistema estadístico, sino que es un entorno en el cual se han implementado muchas técnicas estadísticas.\nEl código de R está disponible como software gratuito y de libre acceso, el cual continuamente es mejorado por personas en todo el mundo que colaboran para su desarrollo.\nPara acceder a la consola de R, busca el siguiente símbolo en tu menú de aplicaciones: \nUna vez que se ha abierto, ubica el prompt (>). Este símbolo indica que R está a la espera de tus órdenes. Si escribes instrucciones frente al prompt y das enter, R las ejecutará, siempre y cuando uses el lenguaje específico que R requiere. Por ejemplo, escribe:\n\n\ndate()\n\n\n[1] \"Fri Dec 17 22:27:36 2021\"\n\n¿Qué es RStudio?\nUn entorno amigable diseñado para R que permite realizar los procedimientos de manera más sencilla e intuitiva.\nVentajas de RStudio\nPermite:\nResaltar la sintaxis.\nAutocompletar el código.\nAdministrar fácilmente múltiples directorios de trabajo usando proyectos.\nHacer diagnóstico de errores.\n\nPuedes abrirlo ubicando el siguiente símbolo en tu menú de aplicaciones: \nUna vez que has abierto RStudio, puedes personalizar el color de fondo y el color con el que se resalta la sintaxis. Para esto debes ubicar la opción Tools y dar click en Global Options. Se abrirá una ventana con múltiples opciones, entre ellas la opción Appearance. Aquí podrás seleccionar un tema para tu editor, además de cambiar el tipo y tamaño de tu letra.\nPara que observes como RStudio autocompleta el código, ubica la consola (busca el prompt >), escribe dat y observa que sucede.\nRStudio te ofrece sugerencias de funciones que inician con las letras que estás escribiendo, como la función data(). Usando las flechas de tu teclado puedes navegar entre las distintas opciones que te ofrece R. Navega entre las opciones hasta encontrar la función date(), una vez que hayas encontrado esta función usa la tecla Tab o tabuladora para autocompletar la función.\nAhora, intenta hacer lo mismo en R directamente. Como podrás notar, R no te ofrece sugerencias al escribir. Puedes forzar a R a hacer esto dando doble click en la tecla Tab, sin embargo tienes la desventaja de que solo te da el nombre de las funciones y tú tienes que completar las letras que te falten, lo cual no es un problema con la función data(), pues falta solo una letra, pero tomaría un poco más de tiempo escribir la función data.frame(). RStudio optimiza nuestro tiempo al autocompletar el código.\nRStudio, además, te permite tener proyectos por separado donde estés trabajando con código para distintos propósitos. ¡Vamos a abrir un proyecto para este curso! Ubica la esquina superior derecha de tu RStudio, si das click sobre Project: None observarás lo siguiente: \nSelecciona New Project, te aparecerá esta ventana: \nPuedes generar una nueva carpeta (o directorio) con “New Directory”, esto si no tienes alguna designada en tu computadora para el curso. Si ya habías creado una carpeta con anterioridad, da click en “Existing Directory”.\nAl seleccionar “New Directory” te dará varias opciones, vuelve a seleccionar “New Directory”. Se abrirá una ventana como la siguiente:\nNombrar proyectoDeberás darle un nombre a tu carpeta y explorar (browse) los directorios existentes de tu computadora para seleccionar la ubicación donde se guardará la nueva carpeta del proyecto. Cuando programes, procura no nombrar carpetas y archivos usando caracteres especiales (ej. acentos, ñ, +, *, /, @, #…), caracteres gráficos (ej. ♣, ♦, ♥, ♠…) o espacios. Para este curso, sugerimos el nombre de carpeta: inter_RStats_2022. Una vez nombrada la carpeta y seleccionada la ubicación, da click en “Create Project”. ¡Listo! Ahora RStudio debería ubicarte en automático en ese proyecto.\nProyectos\nMantenienen un ambiente de trabajo ordenado pues permiten:\nConcentrar todos los archivos asociados a un proyecto en una sola ubicación.\nSeparar claramente un proyecto de otros en los que se estén trabajando.\nMantener los resultados del código que se ejecutó anteriormente (environment).\nConservar un directorio de trabajo estable.\nUn directorio de trabajo (Working Directory) es la carpeta en la cual RStudio busca los archivos que se le solicita leer y donde colocará los archivos que se le pida que guarde. RStudio muestra el WD actual en la parte superior de la consola (ej.~/Documents/inter_RStats_2022/). Puedes conocer tu WD actual usando el comando:\n\n\ngetwd()\n\n\n\nPáneles en RStudio\nComo habrás observado desde que abriste R, tiene múltiples páneles además de la consola. Seguramente, por ahora ves solo 3, similar a lo siguiente:\nPaneles sin editorVamos a hacer que se muestren los 4 páneles principales de RStudio, de la siguiente forma: \nPara abrir el editor de código, crearemos un script. Da click en el siguiente ícono: \nCada panel cumple funciones distintas, las cuales describiremos a continuación de manera breve.\nConsola de R\nPermite que se ejecuten las instrucciones que escribimos para R. Al igual que el panel anterior, permite que el código se autocomplete (a diferencia de la consola de R que vimos fuera de RStudio). Cuenta con un símbolo de escoba que nos permite limpiar lo que hay en la consola, lo cual también puede hacerse con las teclas Ctrl + L o Cmd + L Además, cuando R aún está ejecutando nuestras instrucciones, muestra un símbolo para interrumpir la ejecución. Para observar esto, vamos a ejecutar la siguiente instrucción:\n\n\nwhile(1 < 2) {\n  print(\"Presiona el botón de STOP para detener\")\n}\n\n\n\nAdemás del botón STOP, también podemos presionar la tecla Esc en nuestro teclado para parar la ejecución.\nEditor de código fuente y visor de datos\nEditor\nPermite generar documentos en los cuáles se almacenen todos los comandos de código que serán ejecutados posteriormente. Al escribir en ellos R no seguirá automáticamente las instrucciones que estamos dando. Cuenta, además, con resaltado de sintaxis y detección de posibles errores. Por ejemplo, en el script que abriste escribe lo siguiente:\nx y <-10\nComo puedes observar, RStudio resalta el número 10 en un color distinto y, además, junto al número de línea marca un tache, indicando que la línea contiene errores.\nTipos de documentos comúnmente usados:\nR Script. Documentos de texto plano para almacenar código. Su extensión es .R\nR Markdown. Documento que permite combinar el código, sus resultados y comentarios en prosa. Además, tiene diferentes formatos de salida (PDF, word, presentaciones, etc.). Su extensión es .Rmd\nAquí un par de links donde consultar más sobre R Markdown:\nGuía de referencia de R Markdown\nCheat Sheet de R Markdown\nEn ambos tipos de documentos, las líneas del documento están numeradas y las instrucciones escritas pueden ejecutarse al ubicar el cursor en una línea particular. La ejecución puede hacerse con las teclas Ctrl + enter (para usuarios de Windows) o Cmd + enter (para usuarios de Linux/macOs), o bien, también usando el botón Run ubicado en la parte superior derecha del panel de edición.\nAlgunos atajos de teclado para edición de código\nCtrl + shift + R Genera una sección en el script y marca un indice (también se pone con más de 5 guiones).\nShift + flechas de teclado permite seleccionar varias líneas.\nCtrl + enter Ejecuta la linea en la cual te encuentras posicionado o las líneas seleccionadas.\nAlt + shift + flecha hacia abajo Genera una copia de la línea actual en el siguiente renglón.\nAlt + flecha arriba/abajo Mueve la línea de código actual.\nCtrl + alt + flecha arriba/abajo Permite duplicar el cursor y editar varias líneas a la vez (para dejar de duplicar se presiona esc).\nCtrl + shift + C Comenta varias líneas seleccionadas.\nVisor\nCuando abrimos un conjunto de datos en R, la visualización se lleva a cabo en el mismo panel que se encuentra el editor. Por ejemplo, usando la función View() vamos a abrir el visor usando un conjunto de datos que viene por defecto en R. Ejecuta la siguiente línea de código:\nView(mtcars)\nEspacio de trabajo : Ambiente\nContiene la ventana de ambiente, donde se irán registrando los objetos que vayamos creando. Tenemos la opción de cargar y guardar una sesión de trabajo, importar datos y limpiar los objetos de la sesión.\nObjetos\nPueden ser valores numéricos, vectores, funciones, bases de datos, gráficos, etc. Los objetos en R se crean de la siguiente forma:  La imágen muestra (de izquierda a derecha):\nUn objeto a crear, con un nombre que nosotros definimos arbitrariamente.\nEl símbolo asignador, que expresa que todo lo que se encuentre a la derecha de la flecha se guardará en el objeto creado. Puede ser <- o =\nLa función, que en este caso permite leer archivos de Excel.\nLos argumentos se indican dentro de los paréntesis. En particular, el primer argumento indica la información a leer (archivo de excel), el segundo argumento indica la hoja del archivo a leer y el tercer argumento indica que columnas se leerán de forma específica (en este caso las primeras 10).\nComo iremos viendo a lo largo del curso, luego del asignador las funciones son solo un tipo de información que podemos incluir. Podemos, por ejemplo, guardar números en objetos:\n\n\nnumero <- 10\n\n\n\nAl ejecutar el código anterior, puedes notar que en tu ventana Environment ahora aparece registrado el objeto numero. Para acceder al contenido de los objetos, podemos simplemente escribir su nombre en nuestra consola:\n\n\nnumero\n\n\n[1] 10\n\nSe puede modificar el contenido de un objeto cambiando lo que se encuentre a la derecha del símbolo <-\n\n\nnumero <-5\n\n\n\n\n\nnumero\n\n\n[1] 5\n\nAlgunas consideraciones al generar objetos\nLos nombres de los objetos:\nDeben comenzar con una letra (no número)\nPueden contener letras, números, guiones bajos y puntos.\nNo deben contener espacios ni caracteres especiales (acentos, barras, comillas, guión medio, paréntesis, diagonal etc.).\nDeben ser descriptivos.\nNo se tienen que repetir.\nEjemplos:\nyo_uso_guion_bajo\nOtraGenteUsaMayusculas\nalgunas.personas.usan.puntos\nY_algunasPocas.Personas_RENIEGANdelasconvenciones ### Algunas funciones útiles para el ambiente de trabajo\nPara ver que objetos están en el Environment podemos usar:\n\n\nls()\n\n\n [1] \"a\"           \"b\"           \"c\"           \"cadena_num\" \n [5] \"cadena_text\" \"edad\"        \"estatura\"    \"IMC\"        \n [9] \"numero\"      \"numeros\"     \"operacion\"   \"peso\"       \n[13] \"texto_1\"     \"verdadero\"   \"x\"           \"y\"          \n[17] \"z\"          \n\n\n\nobjects()\n\n\n [1] \"a\"           \"b\"           \"c\"           \"cadena_num\" \n [5] \"cadena_text\" \"edad\"        \"estatura\"    \"IMC\"        \n [9] \"numero\"      \"numeros\"     \"operacion\"   \"peso\"       \n[13] \"texto_1\"     \"verdadero\"   \"x\"           \"y\"          \n[17] \"z\"          \n\nPara remover un objeto en específico:\n\n\nrm(numero)\n\n\n\nPara eliminar todo el contenido del Environment:\nrm(list = ls())\nEspacio de trabajo : Historial\nEl panel History muestra un historial de las líneas de código que se han ejecutado en la consola. Al hacer doble click sobre alguna línea el código se copia a la consola para que se pueda volver a ejecutar la operación. También se puede acceder a líneas de código pasadas colocando el cursor en la consola y presionando la tecla con la flecha hacia arriba.\nFicheros/files\nEn este espacio aparecen los archivos que están en el directorio de trabajo. Permite renombrarlos, eliminarlos, copiarlos, moverlos o generar nuevas carpetas y archivos sin necesidad de salir de RStudio.\nPlots\nEn este panel se visualizan los gráficos generados. La función básica para generar gráficos es plot()\n\n\nplot(mtcars)\n\n\n\n\nTambién se pueden visualizar los gráficos usando la función x11() en Windows o quartz() en Linux/MacOS. Se pueden cerrar usando dev.off()\nPara windows:\n\n\nx11()\nplot(mtcars)\ndev.off()\n\n\n\nPara Linux/MacOS:\n\n\nquartz()\nplot(mtcars)\ndev.off()\n\n\n\nPackages\nPermite visualizar las librerías que hay actualmente en el disco duro de la máquina, cargarlas para su uso, gestionar la instalación de nuevas librerías o la actualización de las ya descargadas.\nLas librerías desarrolladas en R cubren multitud de campos: desde estadística descriptiva e inferencial, aplicaciones Bayesianas, financieras, métodos gráficos, machine learning, creación de aplicaciones web, etc.\nPara incluir librerias adicionales a las que vienen por default, se usa la función install.packages(“nombre del paquete”). Cabe resaltar que esta función tendremos que usarla sólo una vez.\nCuando tenemos una libreria adicional instalada y queremos cargar sus funciones a nuestro Environment usamos la función library(“nombre del paquete”). Esta linea debe ejecutarse cada vez que se vaya a usar la función en una sesión nueva.\nHelp\nEn este panel podemos obtener ayuda sobre una determinada función o librería. Por ejemplo, si quisieramos saber qué hace la función date() podríamos escribir su nombre en el espacio que se encuentra junto a la lupa o escribir estas líneas en nuestra consola:\nhelp(date)\n?date\n\n\n\n",
      "last_modified": "2021-12-17T22:27:37+00:00"
    },
    {
      "path": "comparativa_entre_poblaciones.html",
      "title": "3.5 Comparativa entre poblaciones",
      "description": "Principales pruebas estadísticas para la comparativa entre poblaciones\n",
      "author": [
        {
          "name": "Azalea Reyes-Aguilar",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nDiseños experimentales comparativos y prueba de hipótesisPlantear la hipótesis nula\nTipo de hipótesis alterna y nivel de significancia\nOne-t-test\nTwo-t-test\n¿hay diferencias en las calificaciones entre los dos turnos?\n¿cómo lo probarían?\n¿El turno matutino obtuvó mayores calificaciones que el del turno vespertino?\n\nNo-Paramétrica: Prueba U de Mann-Whitney para muestras independientes\nNo-Paramétrica: Prueba Wilcox para muestras dependientes\nComparación entre más de dos grupos paramétrica\n\nDiseños experimentales comparativos y prueba de hipótesis\nEn los experimentos cuyo diseño incluye a DOS grupos o condiciones experimentales para probar si existen diferencias entre ellos (grupos o condiciones).\nSi son DOS grupos independientes, comparación entre muestras independientes. Si son DOS condiciones experimentales, comparación entre dos condiciones, la misma muestra.\nPlantear la hipótesis nula\nNo existe diferencia entre la media de una medida entre los dos grupos\nPlantear alternativa | NO-direccional\nH0 : µ1 = µ2\nH1 : µ1 ≠ µ2\nPlantear alternativas | Direccional\nH0 : µ1 = µ2\nH1 : µ1 > µ2\no\nH2 : µ1 < µ2\nTipo de hipótesis alterna y nivel de significancia\nFigure from https://bookdown.org/Si nuestros datos cumplen con los criterios de la estadística paramétrica, podemos usar t-test\nt.test(x, y = NULL, alternative = c(\"two.sided\", \"less\", \"greater\"), mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)\n\nShow code\nlibrary(dplyr)\nset.seed(50)\n\nBBC <- cbind(BBC_v = rnorm(80, 7.2, 1.1),\n                     BBC_m = rnorm(80, 8.4, 1.8))\nBBC <- as_tibble(BBC)\nBBC <- BBC %>%  \n  dplyr::filter(BBC_v <= 10, \n                BBC_m <= 10)\nBBC <- cbind(BBC, id = c(1:63))\nBBC <- as_tibble(BBC)\n\n\n\nTenemos las calificaciones de dos grupos de BBC, matutino y vespertino.\nRevisa si son normales sus distrubuciones y si tienen homogeneidad de varianzas.\n\nShow code\nshapiro.test(BBC$BBC_m)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  BBC$BBC_m\nW = 0.96575, p-value = 0.07663\nShow code\nshapiro.test(BBC$BBC_v)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  BBC$BBC_v\nW = 0.98549, p-value = 0.6659\nShow code\nvar.test(x = BBC$BBC_m,\n         y = BBC$BBC_v)\n\n\n\n    F test to compare two variances\n\ndata:  BBC$BBC_m and BBC$BBC_v\nF = 1.8368, num df = 62, denom df = 62, p-value = 0.01797\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 1.111365 3.035767\nsample estimates:\nratio of variances \n          1.836803 \n\nOne-t-test\nVamos a probar si la media de las calificaciones de BBC matutino (BBC_m) es igual a 10.\nH0 : µ1 = 10\nH1 : µ1 ≠ 10\n\nShow code\nt.test(BBC$BBC_m, mu = 10)\n\n\n\n    One Sample t-test\n\ndata:  BBC$BBC_m\nt = -13.558, df = 62, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 10\n95 percent confidence interval:\n 7.199985 7.919553\nsample estimates:\nmean of x \n 7.559769 \n\nTwo-t-test\nVamos a visualizar las distrubuciones de las dos poblaciones/grupos\n\nShow code\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(forcats)\n## custom colors\nmy_pal <- rcartocolor::carto_pal(n = 8, name = \"Bold\")[c(1, 3, 7, 2)]\n\nq_pal <- colorspace::lighten(rcartocolor::carto_pal(\n  n = 4, name = \"Geyser\")[c(2, 1, 4, 3)], .6)\n\ntheme_flip <- theme(\n    axis.text.x = element_text(face = \"plain\", size = 22),\n    axis.text.y = element_text(face = \"bold\", size = 26),\n    panel.grid.major.x = element_line(color = \"grey90\", size = .6),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"top\", \n    legend.text = element_text(size = 18),\n    legend.title = element_text(face = \"bold\", size = 18, margin = margin(b = 25))\n  )\n\nBBC_l <- BBC %>% \n  pivot_longer(!id, names_to = \"turno\", values_to = \"score\") \n\n\n\n\nShow code\nggplot(BBC_l, aes(score, fct_rev(turno), color = turno, fill = turno)) + \n  coord_cartesian(clip = \"off\") +\n  scale_y_discrete(expand = c(.07, .07)) +\n  scale_color_manual(values = my_pal, guide = \"none\") +\n  scale_fill_manual(values = my_pal, guide = \"none\") +\n  theme_flip + \n  labs(title = \"Calificaciones BBC\", x= \"turno\", y = \" \") +\n  ggridges::stat_density_ridges(\n    aes(fill = factor(stat(quantile))),\n    geom = \"density_ridges_gradient\", calc_ecdf = TRUE, quantiles = 4, \n    color = \"black\", size = 1) +\n  scale_fill_manual(values = q_pal, name = \"Quartile:\") +\n  guides(fill = guide_legend(override.aes = list(color = \"transparent\"))) +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        axis.title.y = element_text(size = 18, face=\"bold\"),\n        axis.title.x = element_text(size = 18, face=\"bold\"),\n        axis.text = element_text(size = 10, face=\"bold\")) \n\n\n\n\n¿hay diferencias en las calificaciones entre los dos turnos?\nH0 : µ1 = µ2\nH1 : µ1 ≠ µ2\n¿cómo lo probarían?\n¿El turno matutino obtuvó mayores calificaciones que el del turno vespertino?\nH0 : µ1 = µ2\nH1 : µ1 > µ2\n\nShow code\nt.test(BBC$BBC_m, BBC$BBC_v, alternative =  \"greater\", var.equal = FALSE)\n\n\n\n    Welch Two Sample t-test\n\ndata:  BBC$BBC_m and BBC$BBC_v\nt = 3.0451, df = 114.07, p-value = 0.001445\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 0.3101834       Inf\nsample estimates:\nmean of x mean of y \n 7.559769  6.878660 \n\nNo-Paramétrica: Prueba U de Mann-Whitney para muestras independientes\nLa prueba se basa en una comparación de cada observación de una muestra xi con cada observación en la segunda muestra yj. Si las muestras tienen la misma mediana, entones cada observación tiene un 0,5 (50%) de probabilidad de ser mayor o menor que la observación correspondiente de la otra muestra. Por tanto plantean las hipótesis:\nH0 : (xi > yj) = 1/2\nH1 : (xi > µ2) ≠ 1/2\nSi nuestros datos de la BBC no cumplieran alguún criterio de la estadística paramétrica.\n\nShow code\nwilcox.test(BBC$BBC_m, BBC$BBC_v)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  BBC$BBC_m and BBC$BBC_v\nW = 2608, p-value = 0.002368\nalternative hypothesis: true location shift is not equal to 0\n\nCon el dataset sleep\n\nShow code\nwilcox.test(sleep$extra ~ sleep$group)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  sleep$extra by sleep$group\nW = 25.5, p-value = 0.06933\nalternative hypothesis: true location shift is not equal to 0\n\nNo-Paramétrica: Prueba Wilcox para muestras dependientes\nUn grupo de doce pacientes con dolor crónico y les damos dos medicaciones distintas para aliviar los síntomas. Pedimos a todos que nos indiquen cuantas horas de alivio observaron con ambas drogas.\n\nShow code\ndf_dolor <- cbind(\n  Paciente = c( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),\n  Droga.A = c( 2,  3.6,  2.6,  2.7,  7.3,  3.4,  14.9,  6.6,  2.3,  2.1,  6.8,  8.5),\n  Droga.B = c( 3.5,  5.7,  2.9,  2.4,  9.9,  3.3,  16.7,  6,  3.8,  4,  9.1,  20.9)\n)\n\ndf_dolor <- as_tibble(df_dolor)\n\n\n\nHacemos el test\n\nShow code\nwilcox.test(df_dolor$Droga.A, df_dolor$Droga.B, paired = TRUE)\n\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  df_dolor$Droga.A and df_dolor$Droga.B\nV = 8, p-value = 0.01669\nalternative hypothesis: true location shift is not equal to 0\n\nComparación entre más de dos grupos paramétrica\nANOVA - una vía-factor\nANOVA FACTORIAL\nKruskal-Wallis\nFriedman test\n\n\n\n",
      "last_modified": "2021-12-17T22:27:43+00:00"
    },
    {
      "path": "correlacion_y_regresion.html",
      "title": "3.3 Correlación y regresión lineal",
      "description": "Revisión de los principios sobre ambos análisis y código para llevarlos a cabo. \n",
      "author": [
        {
          "name": "Emma Botello",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nCorrelación\nSu finalidad es conocer la relación o grado de asociación que existe entre dos o más conceptos, categorías o variables en una muestra o contexto particular.\nLas variables NO son variable independiente (causa) y dependiente(efecto) en la correlación.\n¿Por qué? Porque una correlación fuerte entre dos variables no significa que una de ellas sea la causa de la otra.\nHipótesis en la correlación\nHipótesis estadísticas\nH0: No existe una relación estadísticamente significativa entre las variables.\nH1: Existe una relación estadísticamente significativa entre las variables.\nHipótesis de trabajo\nPlantean que existe relación entre dos o más variables y puede ser que se especifique cómo están asociadas:\nExiste una relación entre el nivel socioeconómico y la calidad de vida.\nA mayor nivel socioeconómico, mayor calidad de vida.\nA mayor nivel socioeconómico, menor calidad de vida.\nSe debe tomar en cuenta que en una hipótesis de correlación NO es importante en qué orden coloquemos las variables, ya que no hay relación de causalidad.\ncuando X es mayor, Y es mayor = cuando Y es mayor, X es mayor cuando X es mayor, Y es menor = cuando Y es menor, X es mayor\nPruebas de hipótesis: Los coeficientes de correlación\nExpresan cuantitativamente la magnitud y dirección de la relación entre dos variables.\n* Magnitud: 0-1 * Dirección: Negativa-Positiva\nInterpretacionCorrelación negativa perfecta: cada vez que X aumenta una unidad, Y disminuye siempre una cantidad constante\nCorrelación positiva perfecta: cada vez que X aumenta una unidad, Y aumenta siempre una cantidad constante\nVamos a trabajar con los datos de ABIDE. Para esto primero vamos a leer el archivo csv y explorarlo.\n\n\nBD_ABIDE<-read.csv(\"./datos/Phenotypic_V1_0b.csv\")\n\n\n\nVeamos las variables que contiene:\n\n\nnames(BD_ABIDE)\n\n\n [1] \"SITE_ID\"                        \n [2] \"SUB_ID\"                         \n [3] \"DX_GROUP\"                       \n [4] \"DSM_IV_TR\"                      \n [5] \"AGE_AT_SCAN\"                    \n [6] \"SEX\"                            \n [7] \"HANDEDNESS_CATEGORY\"            \n [8] \"HANDEDNESS_SCORES\"              \n [9] \"FIQ\"                            \n[10] \"VIQ\"                            \n[11] \"PIQ\"                            \n[12] \"FIQ_TEST_TYPE\"                  \n[13] \"VIQ_TEST_TYPE\"                  \n[14] \"PIQ_TEST_TYPE\"                  \n[15] \"ADI_R_SOCIAL_TOTAL_A\"           \n[16] \"ADI_R_VERBAL_TOTAL_BV\"          \n[17] \"ADI_RRB_TOTAL_C\"                \n[18] \"ADI_R_ONSET_TOTAL_D\"            \n[19] \"ADI_R_RSRCH_RELIABLE\"           \n[20] \"ADOS_MODULE\"                    \n[21] \"ADOS_TOTAL\"                     \n[22] \"ADOS_COMM\"                      \n[23] \"ADOS_SOCIAL\"                    \n[24] \"ADOS_STEREO_BEHAV\"              \n[25] \"ADOS_RSRCH_RELIABLE\"            \n[26] \"ADOS_GOTHAM_SOCAFFECT\"          \n[27] \"ADOS_GOTHAM_RRB\"                \n[28] \"ADOS_GOTHAM_TOTAL\"              \n[29] \"ADOS_GOTHAM_SEVERITY\"           \n[30] \"SRS_VERSION\"                    \n[31] \"SRS_RAW_TOTAL\"                  \n[32] \"SRS_AWARENESS\"                  \n[33] \"SRS_COGNITION\"                  \n[34] \"SRS_COMMUNICATION\"              \n[35] \"SRS_MOTIVATION\"                 \n[36] \"SRS_MANNERISMS\"                 \n[37] \"SCQ_TOTAL\"                      \n[38] \"AQ_TOTAL\"                       \n[39] \"COMORBIDITY\"                    \n[40] \"CURRENT_MED_STATUS\"             \n[41] \"MEDICATION_NAME\"                \n[42] \"OFF_STIMULANTS_AT_SCAN\"         \n[43] \"VINELAND_RECEPTIVE_V_SCALED\"    \n[44] \"VINELAND_EXPRESSIVE_V_SCALED\"   \n[45] \"VINELAND_WRITTEN_V_SCALED\"      \n[46] \"VINELAND_COMMUNICATION_STANDARD\"\n[47] \"VINELAND_PERSONAL_V_SCALED\"     \n[48] \"VINELAND_DOMESTIC_V_SCALED\"     \n[49] \"VINELAND_COMMUNITY_V_SCALED\"    \n[50] \"VINELAND_DAILYLVNG_STANDARD\"    \n[51] \"VINELAND_INTERPERSONAL_V_SCALED\"\n[52] \"VINELAND_PLAY_V_SCALED\"         \n[53] \"VINELAND_COPING_V_SCALED\"       \n[54] \"VINELAND_SOCIAL_STANDARD\"       \n[55] \"VINELAND_SUM_SCORES\"            \n[56] \"VINELAND_ABC_STANDARD\"          \n[57] \"VINELAND_INFORMANT\"             \n[58] \"WISC_IV_VCI\"                    \n[59] \"WISC_IV_PRI\"                    \n[60] \"WISC_IV_WMI\"                    \n[61] \"WISC_IV_PSI\"                    \n[62] \"WISC_IV_SIM_SCALED\"             \n[63] \"WISC_IV_VOCAB_SCALED\"           \n[64] \"WISC_IV_INFO_SCALED\"            \n[65] \"WISC_IV_BLK_DSN_SCALED\"         \n[66] \"WISC_IV_PIC_CON_SCALED\"         \n[67] \"WISC_IV_MATRIX_SCALED\"          \n[68] \"WISC_IV_DIGIT_SPAN_SCALED\"      \n[69] \"WISC_IV_LET_NUM_SCALED\"         \n[70] \"WISC_IV_CODING_SCALED\"          \n[71] \"WISC_IV_SYM_SCALED\"             \n[72] \"EYE_STATUS_AT_SCAN\"             \n[73] \"AGE_AT_MPRAGE\"                  \n[74] \"BMI\"                            \n\nSeleccionemos ahora los datos con los que nos interesa trabajar, para ello usaremos funciones de dplyr:\n\n\nlibrary(dplyr)\nBD<-BD_ABIDE %>% \n  select(SITE_ID,DX_GROUP,SRS_RAW_TOTAL,VIQ,AGE_AT_SCAN) %>% filter(SITE_ID==\"YALE\",SRS_RAW_TOTAL!=-9999) \n#Se eliminan valores NA codificados como -9999 en esta base de datos\n\n\n\nAhora veamos la estructura general de los datos con los que vamos a trabajar\n\n\nstr(BD)\n\n\n'data.frame':   52 obs. of  5 variables:\n $ SITE_ID      : chr  \"YALE\" \"YALE\" \"YALE\" \"YALE\" ...\n $ DX_GROUP     : int  2 2 2 2 2 2 2 2 2 2 ...\n $ SRS_RAW_TOTAL: int  4 1 12 17 10 35 28 28 2 2 ...\n $ VIQ          : int  107 106 119 87 122 89 92 101 116 106 ...\n $ AGE_AT_SCAN  : num  15.92 12.75 9.75 8.67 14.42 ...\n\nAquí, la variable DX_GROUP se toma como íntegro, pero realmente debería ser un factor de 2 niveles (1= Trastorno del Espectro Autista, 2= Desarrollo Típico):\n\n\nBD$DX_GROUP<- factor(BD$DX_GROUP, levels = c(\"1\",\"2\"),\n                  labels = c(\"TEA\",\"DT\"))\n\n\n\nVeamos los descriptivos de la muestra:\n\n\nBD %>%\n  group_by(DX_GROUP) %>% \n  summarise(\n    n=n(),\n    media_edad=mean(AGE_AT_SCAN),\n    ds_edad=sd(AGE_AT_SCAN),\n    min_edad=min(AGE_AT_SCAN),\n    max_edad=max(AGE_AT_SCAN),\n    media_SRS=mean(SRS_RAW_TOTAL),\n    ds_SRS=sd(SRS_RAW_TOTAL),\n    min_SRS=min(SRS_RAW_TOTAL),\n    max_SRS=max(SRS_RAW_TOTAL),\n    media_VIQ=mean(VIQ),\n    ds_VIQ=sd(VIQ),\n    min_VIQ=min(VIQ),\n    max_VIQ=max(VIQ),\n    \n  )\n\n\n# A tibble: 2 × 14\n  DX_GROUP     n media_edad ds_edad min_edad max_edad media_SRS ds_SRS\n  <fct>    <int>      <dbl>   <dbl>    <dbl>    <dbl>     <dbl>  <dbl>\n1 TEA         26       13.0    2.94     7        17.8      93.4   25.3\n2 DT          26       12.6    2.81     7.66     17.8      23.3   19.7\n# … with 6 more variables: min_SRS <int>, max_SRS <int>,\n#   media_VIQ <dbl>, ds_VIQ <dbl>, min_VIQ <int>, max_VIQ <int>\n\nVisualización en Scatter plots (diagramas de dispersión)\nPodemos darnos una idea de cómo es la relación entre dos variables usando los digramas de dispersión. En esta clase de visualización se grafica un punto en la coordenada donde interseccionan el valor de una variable X y el valor de una variable Y.\n Cuanto más cercanos son los puntos a una línea modelada, mayor es la magnitud del coeficiente de correlación.\nVamos a visualizar nuestras variables\n\n\nlibrary(ggplot2)\nggplot(BD, aes(x=SRS_RAW_TOTAL, y=VIQ, color=DX_GROUP)) + \n    geom_point(size=4) +\n    labs(\n        color =\"Grupo\",\n        x=\"Puntaje SRS\",\n        y=\"VIQ\"\n    )+\n    theme_minimal()\n\n\n\n\n\n\nggplot(BD, aes(x=SRS_RAW_TOTAL, y=VIQ, color=AGE_AT_SCAN)) + \n    geom_point(size=4) +\n    labs(\n        color =\"Edad\",\n        x=\"Puntaje SRS\",\n        y=\"VIQ\"\n    )+\n    theme_minimal()\n\n\n\n\nCalculando los coeficientes\nCoeficiente de correlación de Pearson (r) o coeficiente producto-momento.\n\nEs una prueba paramétrica usada para analizar la relación entre dos variables medidas en un nivel de intervalos o razón (variables cuantitativas continuas).\n\n\ncor.test(BD$SRS_RAW_TOTAL,BD$VIQ)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  BD$SRS_RAW_TOTAL and BD$VIQ\nt = -1.6335, df = 50, p-value = 0.1086\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.46916880  0.05094158\nsample estimates:\n       cor \n-0.2250879 \n\nAquí, el valor de cor indica la magnitud y la dirección de la correlación. El p-value nos indica si los resultados caen dentro de la zona de rechazo o la zona de aceptación de la hipótesis nula.\nH0En general, en psicología suele asumirse un riesgo de 5% de concluir que existe un efecto cuando en realidad no lo hay (rechazar la hipótesis nula y quedarnos con la alternativa), por lo cual un p-value<0.05 implica que existe una relación estadísticamente significativa.\nUna diferencia estadísticamente significativa solamente significa que existe evidencia estadística de que hay una relación. NO significa que la diferencia sea grande, importante o radicalmente diferente; para conocer la magnitud de la correlación recurrimos al coeficiente (cor).\nCoeficiente de correlación de Spearman (ρ), correlación de grados/rangos ordenados o Rho (ρ) de Spearman.\nEs la alternativa no paramétrica de la correlación de Pearson, sin embargo es aplicable cuando las mediciones se realizan en una escala ordinal, aprovechando la clasificación por rangos.\n\n\ncor.test(BD$SRS_RAW_TOTAL,BD$VIQ, method = \"spearman\")\n\n\n\n    Spearman's rank correlation rho\n\ndata:  BD$SRS_RAW_TOTAL and BD$VIQ\nS = 30227, p-value = 0.03681\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n       rho \n-0.2903192 \n\nMatrices de correlación\nPermiten identificar visualmente el valor de múltiples coeficientes de correlación y la dirección de las relaciones.\n * Aquí un tutorial para hacer matrices de correlación con la libreria corrplot. * Aquí un tutorial para hacer matrices de correlación con la libreria psych. * Aquí hay múltiples tutoriales útiles para graficar correlaciones.\nRegresión lineal\nEs un modelo estadístico que brinda la oportunidad de predecir las puntuaciones de una variable a partir de las puntuaciones de otra (estimar el efecto de una sobre otra)\nEstá asociado con el coeficiente de correlación de Pearson, pues a mayor magnitud del coeficiente se tiene mayor capacidad de predicción.\nA diferencia de la correlación, sí se considera a una variable como dependiente y la otra independiente.\nTrabaja con variables en nivel de medición de intervalos o razón.  # Recta de regresión\nLa regresión lineal consiste en modelar la ecuación de una recta que pueda resumir el diagrama de dispersión. La ecuación modelada es:\nY’ = B0 + B1*x’\nDonde:\nY’ es un valor de la variable dependiente que se desea predecir\nB0 es el intercepto (valor que toma Y cuando X vale 0)\nB1 es la pendiente o inclinación de la recta. Para interpretar la pendiente se dice que: por cada unidad adicional en x, la variable Y aumenta B1 unidades.\nx’ es el valor nuevo que se asigna a la variable independiente o predictora.\nB0 y B1 son coeficientes constantes que se obtienen al modelar la línea que mejor se ajusta a los datos. Tanto Y’ como x’ van cambiando, pues la nueva entrada da otro valor al realizar las operaciones de la ecuación.\nRecta_regrresionComandos en R\nCon el comando lm(variable dependiente~predictor1, data = mis_datos) generemos un objeto donde se almacena la información del modelo.\n\n\nmodelo_simple <- lm(SRS_RAW_TOTAL ~ VIQ, data = BD)\n#modelo_multiple <- lm(SRS_RAW_TOTAL ~ VIQ+ AGE_AT_SCAN, data = BD)\nmodelo_simple\n\n\n\nCall:\nlm(formula = SRS_RAW_TOTAL ~ VIQ, data = BD)\n\nCoefficients:\n(Intercept)          VIQ  \n   107.2495      -0.4741  \n\nIntercepto: El valor promedio del puntaje de la SRS cuando el coeficiente intelectual verbal vale 0 es de 107.2495 unidades.\nPendiente (predictor disp): Por cada unidad que se incrementa en el predictor VIQ, el puntaje de la SRS disminuye en promedio 0.4741 unidades.\n\nPara conocer el contenido del objeto:\n\n\nnames(modelo_simple)\n\n\n [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n [9] \"xlevels\"       \"call\"          \"terms\"         \"model\"        \n\nPara visualizar los principales parámetros del modelo:\n\n\nsummary(modelo_simple)\n\n\n\nCall:\nlm(formula = SRS_RAW_TOTAL ~ VIQ, data = BD)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.997 -37.101  -4.937  32.953  87.633 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 107.2495    30.4789   3.519 0.000934 ***\nVIQ          -0.4741     0.2902  -1.634 0.108640    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 41.25 on 50 degrees of freedom\nMultiple R-squared:  0.05066,   Adjusted R-squared:  0.03168 \nF-statistic: 2.668 on 1 and 50 DF,  p-value: 0.1086\n\nSe observa que el p-value del estadístico F es mayor a .05 (0.108640) , lo cual indica que el predictor del modelo no está significativamente relacionado con la variable dependiente.\nAcorde a lo obtenido en multiple R-squared, el VIQ es capaz de explicar el 05.06% de la variabilidad observada en los puntajes totales de la SRS.\nGráfico de dispersión con la recta de regresión\n\n\n#plot(BD$VIQ,BD$SRS_RAW_TOTAL)\n#abline(modelo_simple, col = \"red\")\n\nggplot(data = BD, aes(x = VIQ, y = SRS_RAW_TOTAL)) + \n  geom_point(color='blue') +\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(\n    x=\"Coeficiente intelectual verbal\",\n    y=\"Escala de sensibilidad social (Total)\"\n  )\n\n\n\n\nRegresión logística\nAl igual que la regresión lineal permite predecir la variable dependiente a partir de la independiente. Sin embargo, la variable dependiente (VD) NO es cuantitativa, es categórica.\nRegresión logística binomial: La VD toma dos valores (0 y 1) dependiendo de si el individuo tiene una característica (1) o no (0).\nRegresión logística multinomial: La VD tiene más de dos categorías.\nRegresión logística binomial\nEs un modelo de predicción de probabilidad de ocurrencia de una variable dicotómica categórica\nPermite responder a la pregunta ¿qué tan probable es que ocurra una categoría determinada de la variable dependiente cuando se presenta cierto valor o cierta categoría en la(s) variable(s) independiente(s)?\nEs decir, las variables independientes pueden ser tanto numéricas como categóricas.\nUna de las principales aplicaciones de la regresión logística es la de clasificación binaria, en el que las observaciones se clasifican en un grupo u otro dependiendo del valor que tome la variable empleada como predictor. Por ejemplo, clasificar a una mujer como infertil o no en función de la edad, el número de abortos inducidos y espontáneos previos, información que se encuentra disponible en la base infert.\n\n\nhead(infert)\n\n\n  education age parity induced case spontaneous stratum\n1    0-5yrs  26      6       1    1           2       1\n2    0-5yrs  42      1       1    1           0       2\n3    0-5yrs  39      6       2    1           0       3\n4    0-5yrs  34      4       2    1           0       4\n5   6-11yrs  35      3       1    1           1       5\n6   6-11yrs  36      4       2    1           1       6\n  pooled.stratum\n1              3\n2              1\n3              4\n4              2\n5             32\n6             36\n\n#help(infert)\n\n\n\nEl diagrama de dispersión de dos variables categóricas no brinda mucha información, pues los datos de todas las participantes se agrupan en alguna de las 3 categorías de la variable induced y en alguno de las dos de la variable case.\n\n\ninfertilidad <- infert\nplot(infertilidad$induced, infert$case)\n\n\n\n\nNO hay linealidad en los datos\n\n\nplot(infert$age, infert$case)\n\n\n\n\nEl diagrama de dispersión muestra dos líneas de datos agrupados de acuerdo con las categorías de la variable dependiente, por lo que no se cumple el supuesto de linealidad (los datos no se pueden representar con una línea recta). Esto es importante, ya que para cumplir este supuesto, internamente el modelo hace una transformación logarítmica de los datos.\n\n\nmodelo_logistica <- glm(\n  case ~ age + induced + spontaneous, \n  data = infertilidad, family = binomial)\nsummary(modelo_logistica)\n\n\n\nCall:\nglm(formula = case ~ age + induced + spontaneous, family = binomial, \n    data = infertilidad)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6678  -0.8201  -0.5984   0.9251   2.0236  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -2.40494    0.96380  -2.495   0.0126 *  \nage          0.02154    0.02842   0.758   0.4484    \ninduced      0.43429    0.20663   2.102   0.0356 *  \nspontaneous  1.21446    0.21331   5.693 1.25e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 316.17  on 247  degrees of freedom\nResidual deviance: 279.04  on 244  degrees of freedom\nAIC: 287.04\n\nNumber of Fisher Scoring iterations: 4\n\nInterpretación de los coeficientes del modelo\nLos coeficientes miden el impacto en el logaritmo de la probabilidad. Para quitar el logaritmo se saca el exponencial de los coeficientes.\n\n\nexp(coefficients(modelo_logistica))\n\n\n(Intercept)         age     induced spontaneous \n 0.09027084  1.02177801  1.54387033  3.36845833 \n\nSe interpretan sólo los predictores que fueron significativos en el summary:\nInduced Por cada aborto inducido que se aumenta, la probabilidad de que la mujer sea infértil incrementa 1.54 unidades.\nSpontaneous Por cada aborto espontáneo que se aumenta, la probabilidad de que la mujer sea infértil incrementa 3.36 unidades.\n\n\n\n",
      "last_modified": "2021-12-17T22:27:46+00:00"
    },
    {
      "path": "estadistica_descriptiva.html",
      "title": "Estadistica descriptiva",
      "author": [
        {
          "name": "Juan Díaz",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nEstadística descriptiva\nLa estadística descriptiva se ocupa de métricas, herramientas y estrategias que se pueden utilizar para resumir un conjunto de datos. Estas métricas se extraen de los datos y brindan información sobre la ubicación, dispersión, indicadores de forma, etc.\nUbicación\nEn estadística descriptiva, es útil representar un conjunto de datos completo con un solo valor que describe su ubicación o posición, esto se puede interpretar como el centro de la variable en la recta numérica . Este valor único se define como la tendencia central. La media, la mediana y la moda entran en esta categoría.\nEjercicio 1\nConsiderando el siguiente data.frame:\n\n\nDatos <- iris\n\n\n\n¿Cómo calcularías la media de la variable Sepal.Length?\n\n\nmean(Datos$Sepal.Length)\nmedian(Datos$Sepal.Length)\nmode <- function(x){\n  value <- x[which.max(tabulate(x))]\n  print(value)\n}\nmode(Datos$Sepal.Length)\n\n\n\nDispersión\nDespués de establecer el centro de los valores de una variable, la siguiente pregunta es qué tan cerca están los datos de este centro. El patrón de los valores alrededor del centro se llama extensión, dispersión o variabilidad. Existen numerosas medidas de variabilidad: rango, varianza, desviación estándar, rango intercuartil\n\n\nrange(Datos$Sepal.Length)\nsd(Datos$Sepal.Length)\nvar(Datos$Sepal.Length)\nIQR(Datos$Sepal.Length)\n\n\n\nIndicadores de forma\nLa asimetría es una medida de simetría, o más precisamente, la falta de simetría. Una distribución, o conjunto de datos, es simétrico si se ve igual a la izquierda y a la derecha del punto central.\nLa curtosis es una medida de si los datos son de cola pesada o de cola ligera en relación con una distribución normal. Es decir, los conjuntos de datos con alta curtosis tienden a tener colas pesadas o valores atípicos. Los conjuntos de datos con baja curtosis tienden a tener colas claras o falta de valores atípicos.\n\n\nlibrary(moments)\nskewness(Datos$Sepal.Length)\nkurtosis(Datos$Sepal.Length)\n\n\n\nEjercicio 2:\nGuarda en un objetos llamado “Descriptivos” todos los análisis que acabamos de hacer para una sola variable, de tal forma que por cada columna haya un descriptivo diferente, ejemplo:\n\n\nDescriptivos <- cbind(desc1 = 1, desc2 = 2, desc3 = 3)\nprint(Descriptivos)\n\n\n\nFunciones utiles\nExisten algunas funciones bastante útiles que facilitan en gran medida el cálculo de este tipo de estadísticos, las dos principales son:\n\n\nsummary(Datos)\n#library(psych)\n#describe(Datos)\n\n\n\nEjercicio 2:\nConsiderando los datos de la base Iris calcula la media, la mediana, la desviación estándar y la curtosis para cada planta (fila) y agrega una columna por cada estadístico. Sube tu código al slack cuando hayas terminado.\nConclusión\nEste tipo de estadística tiene diversos usos, por ejemplo identificar los valores atípicos de nuestros datos o su distribución, además de ser necesarios para realizar otro tipo de estadística.\n\n\n\n",
      "last_modified": "2021-12-17T22:27:48+00:00"
    },
    {
      "path": "estructura_de_datos.html",
      "title": "2.2 Estructura de datos",
      "description": "Estructura de datos orientada a objetos, procesamiento y tabulación de datos\n",
      "author": [
        {
          "name": "Ana Gonzalez",
          "url": {}
        },
        {
          "name": "Edgar Morales",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\n¿Qué es una base de datos?Tipo de dato en R\n\nEstructuras de DatosVector\nListas\nMatriz\nDataframe (tabulación)\n\nValores no disponibles\nProcesamiento de datos: dplyr ()R-base vs dplyr\nMas ejemplos\n\nCambios de formaUnión de data.frame similares\nTambien se puede usar dplyr\nUnión de data.frame con un indice en común\n\nTidy dataVentajas\n\nLong vs. Wide format.Wide\nLongTidyr: pivot_longer y pivot_wider\n\n\n\n¿Qué es una base de datos?\nEs un conjunto organizado de información estructurada (data).\nTipo de dato en R\nDato\nDescripcíon\nDefinición\nNumeric\nNúmeros decimales\nnumero <- 1.0\nInteger\nNúmeros enteros\nint <- 1\nCharacter\nCadenas de texto\nstr <- “un texto”\nComplex\nNúmeros complejos\ncomp <- 3+2i\nLogical\nVerdadero (TRUE) o falso (FALSE)\na <- 1; b <- 2; a < b\n**Nota: Factor\nEl tipo o clase de datos lo puedes averiguar con el comando class()\nEstructuras de Datos\nLas estructuras de datos se pueden clasificar por sus dimensiones (1, 2 o n) y si contienen el mismo tipo de dato (homogéneo) o bien diferente tipos de datos (heterogéneo).\nLas estructuras de datos en R-base más cómunes son:\nDimensiones\nHomogéneo\nHeterogéneo\n1\nvector\nlista\n2\nmatriz\ndata frame\nn\narray\n\nEn R no existen estructuras de cero dimensiones\nVector\nEl objeto más simple-básico en R, también llamado atómico, porque contiene elementos de la misma clase (e.g. numeric). Son la base para objetos complejos. Se crea con la función c(), que significa ‘concatenar’ o ‘combinar’. Cómo saber si una estructura de datos es vector: is.vector(data)\nVectores numéricos\n\nShow code\nnumeros_1.10 <- c(1,2,3,4,5,6,7,8,9,10) \nnumeros_1.100 <- c(1:100)\n\n\n\n\nShow code\nvector_s <- c(\"Esto\", \"también\", \"es\", \"un\", \"vector\")\nvector_m <- c(1:10, \"esto\", \"tambien\", \"es\", \"vector\") \n\n\n\nEsto qué es?\n\nShow code\nseq(5, 10, length=20)\n\n\n [1]  5.000000  5.263158  5.526316  5.789474  6.052632  6.315789\n [7]  6.578947  6.842105  7.105263  7.368421  7.631579  7.894737\n[13]  8.157895  8.421053  8.684211  8.947368  9.210526  9.473684\n[19]  9.736842 10.000000\n\nListas\nLas listas son objetos que pueden no solo contener diferentes tipos de clases class en cada item, ademas estos items no necesitan tener las mismas dimensiones entre cada uno de ellos a diferencia de los data.frames.\nEstas estructuras son muy adaptables.\n\nShow code\nlista_1 <- list(id= c(123, 145) , c(\"placas\", \"matricula\", \"marca\", \"color\"),  c(FALSE, FALSE, TRUE))\n\n\n\nMatriz\nConjunto de datos de la misma clase (homogéneo), pero estructurado en dos dimensiones 1. las filas son las horizontales 2. las columnas, las verticales\n\nShow code\nmatriz_1 <- matrix(c('x','y','z','o','b','c'),\n                   nrow = 2,\n                   ncol = 3,\n                   byrow = TRUE)\nmatriz_1\n\n\n     [,1] [,2] [,3]\n[1,] \"x\"  \"y\"  \"z\" \n[2,] \"o\"  \"b\"  \"c\" \n\n\nShow code\nmatriz_2 <- matrix(1:20, 4, 5)\n\n\n\n¿Cómo hacer una lista de varios vectores? cbind o rbind\n\nShow code\nvector_1 <- c(1:10)\nvecror_2 <- c(11:20)\n\ncbind(vecror_2, vector_1)\n\n\n      vecror_2 vector_1\n [1,]       11        1\n [2,]       12        2\n [3,]       13        3\n [4,]       14        4\n [5,]       15        5\n [6,]       16        6\n [7,]       17        7\n [8,]       18        8\n [9,]       19        9\n[10,]       20       10\nShow code\nrbind(vecror_2, vector_1)\n\n\n         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\nvecror_2   11   12   13   14   15   16   17   18   19    20\nvector_1    1    2    3    4    5    6    7    8    9    10\n\nNO condundir con dataframes\nLa estructura de datos lo puedes averiguar con el comando str()\n¿Cuál es la diferencia entre class() y str()\nDataframe (tabulación)\nEs una estructura de datos de dos dimensiones (filas y columnas). Por convención, en las filas se asignan las observaciones y en la columnas, las variables o factores. Cada columna o variable puede contener diferente clase de datos respecto a otras variables. Todas las variables deben tener la misma longitud.\n\nShow code\ndf_1 <- iris\npaged_table(df_1)\n\n\n\n\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.7\",\"2\":\"4.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.3\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.7\",\"2\":\"3.8\",\"3\":\"1.7\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.5\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.3\",\"3\":\"1.7\",\"4\":\"0.5\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"4.5\",\"2\":\"2.3\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.6\",\"4\":\"0.6\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.9\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"7.0\",\"2\":\"3.2\",\"3\":\"4.7\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.4\",\"2\":\"3.2\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"4.9\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.3\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.5\",\"2\":\"2.8\",\"3\":\"4.6\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.8\",\"3\":\"4.5\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"3.3\",\"3\":\"4.7\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"4.9\",\"2\":\"2.4\",\"3\":\"3.3\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.6\",\"2\":\"2.9\",\"3\":\"4.6\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.2\",\"2\":\"2.7\",\"3\":\"3.9\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.0\",\"2\":\"2.0\",\"3\":\"3.5\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.9\",\"2\":\"3.0\",\"3\":\"4.2\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.2\",\"3\":\"4.0\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.9\",\"3\":\"4.7\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.9\",\"3\":\"3.6\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"4.4\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"3.0\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"4.1\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.2\",\"2\":\"2.2\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.5\",\"3\":\"3.9\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.9\",\"2\":\"3.2\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.8\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"2.5\",\"3\":\"4.9\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.8\",\"3\":\"4.7\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.4\",\"2\":\"2.9\",\"3\":\"4.3\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.6\",\"2\":\"3.0\",\"3\":\"4.4\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.8\",\"2\":\"2.8\",\"3\":\"4.8\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.0\",\"3\":\"5.0\",\"4\":\"1.7\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.9\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.6\",\"3\":\"3.5\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.4\",\"3\":\"3.8\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.4\",\"3\":\"3.7\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"3.9\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"5.4\",\"2\":\"3.0\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"3.4\",\"3\":\"4.5\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"4.7\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"2.3\",\"3\":\"4.4\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"3.0\",\"3\":\"4.1\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.5\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.6\",\"3\":\"4.4\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"3.0\",\"3\":\"4.6\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.6\",\"3\":\"4.0\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"5.0\",\"2\":\"2.3\",\"3\":\"3.3\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.7\",\"3\":\"4.2\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"3.0\",\"3\":\"4.2\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.9\",\"3\":\"4.2\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.2\",\"2\":\"2.9\",\"3\":\"4.3\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.1\",\"2\":\"2.5\",\"3\":\"3.0\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.8\",\"3\":\"4.1\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"3.3\",\"3\":\"6.0\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"7.1\",\"2\":\"3.0\",\"3\":\"5.9\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.9\",\"3\":\"5.6\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.8\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"7.6\",\"2\":\"3.0\",\"3\":\"6.6\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"4.9\",\"2\":\"2.5\",\"3\":\"4.5\",\"4\":\"1.7\",\"5\":\"virginica\"},{\"1\":\"7.3\",\"2\":\"2.9\",\"3\":\"6.3\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"2.5\",\"3\":\"5.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.6\",\"3\":\"6.1\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.2\",\"3\":\"5.1\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.7\",\"3\":\"5.3\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.8\",\"2\":\"3.0\",\"3\":\"5.5\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"5.7\",\"2\":\"2.5\",\"3\":\"5.0\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.8\",\"3\":\"5.1\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"3.2\",\"3\":\"5.3\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.5\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"3.8\",\"3\":\"6.7\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"2.6\",\"3\":\"6.9\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.0\",\"2\":\"2.2\",\"3\":\"5.0\",\"4\":\"1.5\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.2\",\"3\":\"5.7\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.6\",\"2\":\"2.8\",\"3\":\"4.9\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"2.8\",\"3\":\"6.7\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.7\",\"3\":\"4.9\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.3\",\"3\":\"5.7\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.2\",\"3\":\"6.0\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.2\",\"2\":\"2.8\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.1\",\"2\":\"3.0\",\"3\":\"4.9\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.8\",\"3\":\"5.6\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.0\",\"3\":\"5.8\",\"4\":\"1.6\",\"5\":\"virginica\"},{\"1\":\"7.4\",\"2\":\"2.8\",\"3\":\"6.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"7.9\",\"2\":\"3.8\",\"3\":\"6.4\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.8\",\"3\":\"5.6\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.8\",\"3\":\"5.1\",\"4\":\"1.5\",\"5\":\"virginica\"},{\"1\":\"6.1\",\"2\":\"2.6\",\"3\":\"5.6\",\"4\":\"1.4\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"3.0\",\"3\":\"6.1\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"3.4\",\"3\":\"5.6\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"3.1\",\"3\":\"5.5\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.0\",\"2\":\"3.0\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"5.4\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"5.6\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"5.1\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.8\",\"2\":\"3.2\",\"3\":\"5.9\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.3\",\"3\":\"5.7\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.0\",\"3\":\"5.2\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.5\",\"3\":\"5.0\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.2\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.2\",\"2\":\"3.4\",\"3\":\"5.4\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.9\",\"2\":\"3.0\",\"3\":\"5.1\",\"4\":\"1.8\",\"5\":\"virginica\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\n\nShow code\nclass(df_1)\n\n\n[1] \"data.frame\"\n\nPara acceder a los datos de las columnas se utiliza el caracter $ después del nombre del dataframe.\ndf_1$Species para acceder a las columnas de las especies de flores en el data-set.\nnames(df_1) para conocer los nombres de las columnas = variables del dataframe\nValores no disponibles\nCasi siempre hay valores faltantes en las bases de datos, lo cual en sí mismos son ya un dato y hay que analizarlos, sin embargo, requieren un tratamiento espacial.\nNA se usa para representar cualquier valor que “no está disponible (Not Available)” o “falte” (en el sentido estadístico).\nUn segundo tipo de valor no disponible: NaN, que significa “no es un número (Not a Number)”.\nAlgunos comandos para trabajar con valores faltantes son: is.na() na.omit() na.rm =\nProcesamiento de datos: dplyr ()\nUna de las ventajas de R es que puede extender sus funcionalidades mediante el uso de paquetes. Es decir si alguna función no se incluye con R. Cualquiera puede crear un paquete para suplir esa función. Eso no solo ha generado nuevas funciones para R, también a creado metodologías de trabajo diferentes a las que tiene R base.\nParte de esas metodologías tienen la intención de mejorar el desempeño de R y/o facilitar su uso. En ese sentido tidyverse intenta hacer el uso de R mas intuitivo, con un enfoque ordenado y con mejoras en el desempeño.\nAunque R base tiene la ventaja de no necesitar ningún paquete para su ejecución sin embargo suele ser mucho mas fácil para quienes van empezando con R usar la sintaxis de dplyr.\n\nPor lo tanto en este curso haremos uso del paquete dplyr() de tidyverse.\n\nPodemos diferenciar la sintaxis de dplyr como una especie de comandos encadenados uno tras otro de la sintaxis R-base donde los comandos pueden ser consecutivos pero no se encadenan.\n\nCabe señalar que dplyr también funciona por comandos en secuencia sin necesidad de encadenar los comandos con el operador pipe.\nDe hecho estos comandos se consideran verbos, siendo estos intuitivos y bastante descriptivos de su función. Incluso la sintaxis tiende a leerse como si fuera lenguaje natural.\nEl encadenamiento de los comandos se lleva a cabo mediante un operador especial también conocido como pipe %>%. Este operador pipe se puede considerar como un redireccionador de un comando hacia el otro.\nEl operador %>% no pertenece a dplyr pertenece en realidad al paquete magrittr\nR-base vs dplyr\nPara comparar calculemos la media de los anchos de los pétalos por especie en el dataset iris. Este conjunto de datos contiene los datos de ancho y largo para los pétalos y sépalos de tres diferentes especies de flores.\n\nIris es un dataset clásico incluido con R. Escribe ?iris para mas información.\nR-base\nEl cálculo por especie se puede lograr con un comando simple:\n\nShow code\naggregate(iris$Petal.Width, list(iris$Species), FUN = mean)\n\n\n     Group.1     x\n1     setosa 0.246\n2 versicolor 1.326\n3  virginica 2.026\n\nSin embargo este comando tiene algunos inconvenientes, requiere conocer el funcionamiento de la función aggregate(), necesita que usemos una referencia al dataset para seleccionar cada variable, ademas los nombres de las columnas no son adecuados y requeriran otro comando para cambiarse por lo tanto es poco intuitivo no solo al generarlo, también al leerlo.\ndplyr\n\nShow code\nlibrary(dplyr)\niris %>% \n  group_by(Species) %>% \n  summarise(media_ancho_petalo = mean(Petal.Width))\n\n\n# A tibble: 3 × 2\n  Species    media_ancho_petalo\n  <fct>                   <dbl>\n1 setosa                  0.246\n2 versicolor              1.33 \n3 virginica               2.03 \n\nEn este caso los comandos de dplyr() son bastante descriptivos, es decir el verbo group_by agrupa el calculo por la variable que se le proporciona, mientras que summarise define el nombre de la columna así como la operación que se realiza sobre la variable a tratar (en este caso Petal.Width). Adenas las variables se usan directamente por su nombre. Y como previamente lo señalamos se puede leer casí directamente\nToma el dataset iris\nAgrupalos por Species\nResumelo mediante la media de Petal.Width\nEn otro ejemplo podemos agregar una columna en donde clasifiquemos aquellos valores de Petal.Width inferiores a 1 y filtrar solo aquellos registros de la especie setosa con valores menores a 1.\n\nShow code\nalt_iris <- iris\nalt_iris$size_petalo <- ifelse(iris$Petal.Width < 1, 'pequeño', 'grande')\nalt_iris <- alt_iris[alt_iris$size_petal == 'pequeño' & alt_iris$Species == 'setosa',]\npaged_table(alt_iris)\n\n\n\n\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"size_petalo\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"1\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"2\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"3\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"4\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"5\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"6\"},{\"1\":\"4.6\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"7\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"8\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"9\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"10\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"11\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"12\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"13\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"14\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"15\"},{\"1\":\"5.7\",\"2\":\"4.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"16\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.3\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"17\"},{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"18\"},{\"1\":\"5.7\",\"2\":\"3.8\",\"3\":\"1.7\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"19\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.5\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"20\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"21\"},{\"1\":\"5.1\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"22\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"23\"},{\"1\":\"5.1\",\"2\":\"3.3\",\"3\":\"1.7\",\"4\":\"0.5\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"24\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"25\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"26\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"27\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"28\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"29\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"30\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"31\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"32\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"33\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"34\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"35\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"36\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"37\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"38\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"39\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"40\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"41\"},{\"1\":\"4.5\",\"2\":\"2.3\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"42\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"43\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.6\",\"4\":\"0.6\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"44\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.9\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"45\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"46\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"47\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"48\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"49\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\",\"_rn_\":\"50\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\nPrimero como tenemos un dataset incluido en R es necesario copiarlo a otro objeto, luego agregamos la información del tamaño y por ultimo tenemos que filtrar usando varias veces el nombre del dataset para ello. Sigue sin ser muy intuitivo y es proclive a errores ya que la coma en la última instrucción si la olvidamos, no podremos obtener resultados.\n\nShow code\niris %>% \n  mutate(size_petal = ifelse(Petal.Width < 1, 'pequeño', 'grande')) %>% \n  filter(size_petal == 'pequeño', Species == 'setosa') %>% \n  paged_table()\n\n\n\n\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"size_petal\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.7\",\"2\":\"4.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.3\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.7\",\"2\":\"3.8\",\"3\":\"1.7\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.5\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.3\",\"3\":\"1.7\",\"4\":\"0.5\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.5\",\"2\":\"2.3\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.6\",\"4\":\"0.6\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.9\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\nPodemos ver que a parte de leerse naturalmente, no necesitamos copiar el dataset original ya que dplyr permite ejecutar estos comandos sin modificar los datos originales. Y en caso de quererlo guardar podemos simplemente:\n\nShow code\nalt_iris <- iris %>% \n  mutate(size_petal = ifelse(Petal.Width < 1, 'pequeño', 'grande')) %>% \n  filter(size_petal == 'pequeño', Species == 'setosa')\npaged_table(alt_iris)\n\n\n\n\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"size_petal\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.7\",\"2\":\"4.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.3\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.7\",\"2\":\"3.8\",\"3\":\"1.7\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.5\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.3\",\"3\":\"1.7\",\"4\":\"0.5\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.5\",\"2\":\"2.3\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.6\",\"4\":\"0.6\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.9\",\"4\":\"0.4\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"pequeño\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\nMas ejemplos\nUsando el dataset sleep podemos calcular el número de observaciones por medicamento soporífero, la media de horas de incremento en el sueño, la desviación estándar y mediana.\n\nEl dataset sleep viene includo con R y contiene información del efecto de dos medicamentos soporíferos y su efecto en el aumento de horas de sueño.\n\nShow code\nsleep %>% \n  group_by(group) %>% \n  summarise(observaciones = n(), media_horas = mean(extra), desviacion = sd(extra), mediana_horas = median(extra))\n\n\n# A tibble: 2 × 5\n  group observaciones media_horas desviacion mediana_horas\n  <fct>         <int>       <dbl>      <dbl>         <dbl>\n1 1                10        0.75       1.79          0.35\n2 2                10        2.33       2.00          1.75\n\nCalculemos la variable estandarizada para cada spray con la formula:\n\\[\n\\frac{X - \\mu}{\\sigma}\n\\] Por lo tanto:\nCalcularemos una columna con la media de todos los insectos muertos por sprays\nCalcularemos la desviación estándar\nRestaremos la medía a cada valor registrado y divideremos entre la desviación estándar.\nCalcularemos la media de la variable estandarizada por grupo.\n\nShow code\nInsectSprays %>% \n  mutate(\n    all_sprays_mean = mean(count),\n    all_sprays_sd = sd(count),\n    var_std = (count - all_sprays_mean) / all_sprays_sd\n  ) %>% \n  group_by(spray) %>% \n  summarise(var_std_mean = mean(var_std))\n\n\n# A tibble: 6 × 2\n  spray var_std_mean\n  <fct>        <dbl>\n1 A            0.694\n2 B            0.810\n3 C           -1.03 \n4 D           -0.636\n5 E           -0.833\n6 F            0.995\n\n\nEl dataset InsectSprays viene con los datos incluidos en R y tiene información de los insectos que mueren por efecto de seis sprays’s insecticidas.\nCambios de forma\nUna vez entendido la estructura de los data.frames una de las tareas habituales que podemos tener es la de cambiar su forma ya sea por unión con otros data.frames o por un rearreglo.\nUnión de data.frame similares\nPodemos unir dos dataframes con el mismo número de columnas con el comando cbind()\nPor columnas\nPor ejemplo, podemos unir:\n\nShow code\ndataframe_1 <- data.frame(col_a = 1:5, col_b = seq(10, 50, by = 10), col_c = c('a', 'b', 'c', 'd', 'e'))\ndataframe_1\n\n\n  col_a col_b col_c\n1     1    10     a\n2     2    20     b\n3     3    30     c\n4     4    40     d\n5     5    50     e\n\n\nShow code\ndataframe_2 <- data.frame(\n  col_d = 11:20, \n  col_e = seq(50, 140, by = 10)\n)\ndataframe_2\n\n\n   col_d col_e\n1     11    50\n2     12    60\n3     13    70\n4     14    80\n5     15    90\n6     16   100\n7     17   110\n8     18   120\n9     19   130\n10    20   140\n\nPodemos obtener entonces:\n\nShow code\ncbind(dataframe_1, dataframe_2)\n\n\n   col_a col_b col_c col_d col_e\n1      1    10     a    11    50\n2      2    20     b    12    60\n3      3    30     c    13    70\n4      4    40     d    14    80\n5      5    50     e    15    90\n6      1    10     a    16   100\n7      2    20     b    17   110\n8      3    30     c    18   120\n9      4    40     d    19   130\n10     5    50     e    20   140\n\nPor renglones\nPodemos unir un dataframe por los rengloes usando rbind()\n\nShow code\ndataframe_a <- data.frame(col_a = 6:10, col_b = seq(60, 100, by = 10), col_c = c('v', 'g', 'j', 'd', 'e'))\ndataframe_a\n\n\n  col_a col_b col_c\n1     6    60     v\n2     7    70     g\n3     8    80     j\n4     9    90     d\n5    10   100     e\n\n\nShow code\ndataframe_b <- data.frame(col_a = 2, col_b = 90, col_c = 'p')\ndataframe_b\n\n\n  col_a col_b col_c\n1     2    90     p\n\n\nShow code\nrbind(dataframe_a, dataframe_b)\n\n\n  col_a col_b col_c\n1     6    60     v\n2     7    70     g\n3     8    80     j\n4     9    90     d\n5    10   100     e\n6     2    90     p\n\nTambien se puede usar dplyr\nTambién podemos usar las funciones símiles en dplyr\nbind_rows\nbind_cols\nLa ventaja de estos comandos es que permiten unir mas de dos data.frames en un solo comando. por ejemplo si tuvieramos un tercer dataframe:\n\nShow code\ndataframe_c <- data.frame(col_a = 4, col_b = 190, col_c = 'y')\ndataframe_c\n\n\n  col_a col_b col_c\n1     4   190     y\n\nY podemos unir los 3 dataframes en una sola instrucción:\n\nShow code\nbind_rows(dataframe_a, dataframe_b, dataframe_c)\n\n\n  col_a col_b col_c\n1     6    60     v\n2     7    70     g\n3     8    80     j\n4     9    90     d\n5    10   100     e\n6     2    90     p\n7     4   190     y\n\nUnión de data.frame con un indice en común\nA veces queremos unir dos data.frames y queremos hacerlo mediante un indice o una llave que los relacione. Por ejemplo si tuvieramos un data.frame con los nombres de usuarios y otro con sus calificaciones, podríamos unirlos por su identificador.\n\nShow code\nalumnos <- data.frame(id = 1:4, nombres = c('Andrea', 'Miguel', 'Francisco', 'Jazmin'))\nalumnos\n\n\n  id   nombres\n1  1    Andrea\n2  2    Miguel\n3  3 Francisco\n4  4    Jazmin\n\n\nShow code\ncalificaciones <- data.frame(id = c(2,1,4,3), calificacion = c(10,8,9,7))\ncalificaciones\n\n\n  id calificacion\n1  2           10\n2  1            8\n3  4            9\n4  3            7\n\nPodemos hacer un inner_join con dplyr:\n\nShow code\ninner_join(alumnos, calificaciones, by='id')\n\n\n  id   nombres calificacion\n1  1    Andrea            8\n2  2    Miguel           10\n3  3 Francisco            7\n4  4    Jazmin            9\n\nExisten variantes de este tipo de uniones:\n\nEstas permiten unir los dataframes dependiendo del tipo de unión:\ninner_join: Solo los valores que coinciden en ambos\nleft_join: Se trae todo los valores del dataframe de la izquierda y si no coincide alguno se coloca NA\nright_join: Se trae todo los valores del dataframe de la derecha y si no coincide alguno se coloca NA\nfull_join: Trae todos los valores aunque no coincidan y coloca NA en los campos que falten\nTidy data\nAl programar los mismos datos se pueden representar de varias maneras:\n\nShow code\ndata.frame(\n  Materias = c(\"Mat1\", \"Mat1\", \"Mat2\", \"Mat2\", \"Mat3\", \"Mat3\"),\n  sem = c(1, 2, 1, 2, 1, 2),\n  aprov = c(20, 10, 5),\n  reprov = c(10, 20, 25)\n)\n\n\n  Materias sem aprov reprov\n1     Mat1   1    20     10\n2     Mat1   2    10     20\n3     Mat2   1     5     25\n4     Mat2   2    20     10\n5     Mat3   1    10     20\n6     Mat3   2     5     25\nShow code\ndata.frame(\n  Materias = c(\"Mat1\", \"Mat1\", \"Mat1\", \"Mat1\", \"Mat2\", \"Mat2\", \"Mat2\", \"Mat2\", \"Mat3\", \"Mat3\",\"Mat3\", \"Mat3\"),\n  sem = c(1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2),\n  eval = c(\"aprov\", \"reprov\", \"aprov\", \"reprov\", \"aprov\", \"reprov\", \"aprov\", \"reprov\", \"aprov\", \"reprov\", \"aprov\", \"reprov\"), \n  calif = c(20, 10, 10, 20, 5, 25, 20, 10, 10, 20, 5, 25)\n)\n\n\n   Materias sem   eval calif\n1      Mat1   1  aprov    20\n2      Mat1   1 reprov    10\n3      Mat1   2  aprov    10\n4      Mat1   2 reprov    20\n5      Mat2   1  aprov     5\n6      Mat2   1 reprov    25\n7      Mat2   2  aprov    20\n8      Mat2   2 reprov    10\n9      Mat3   1  aprov    10\n10     Mat3   1 reprov    20\n11     Mat3   2  aprov     5\n12     Mat3   2 reprov    25\n\n. Todas estas son representaciones de los mismos datos, sin embargo, no fáciles de usar. Un conjunto de datos ordenado permite un trabajo mucho más eficiente.\nHay tres reglas interrelacionadas que hacen que un conjunto de datos sea ordenado:\nCada variable debe tener su propia columna.\nCada observación debe tener su propia fila.\nCada valor debe tener su propia celda.\nVentajas\n1.- Si tiene una estructura de datos coherente, es más fácil aprender las herramientas que funcionan con ella porque tienen una uniformidad subyacente.\n2.- Hay una ventaja específica en colocar variables en columnas porque permite que brille la naturaleza vectorizada de R.\n3.- Algunas paqueterias (dplyr, ggplot2) están diseñadas para trabajar con este ordenamiento.\nLong vs. Wide format.\nEn general existen dos formas de desglosar los datos, a traves del formato Long y el formato Wide, diversas paqueterias funcionan de mejor manera con cada uno.\nWide\n\nShow code\ndata.frame(Participante = c(\"P1\", \"P2\"), ev1 = c(1, 2), ev2 = c(2, 2), ev3 = c(2, 1))\n\n\n  Participante ev1 ev2 ev3\n1           P1   1   2   2\n2           P2   2   2   1\n\nLong\n\nShow code\ndata.frame(Participante = c(\"P1\", \"P1\", \"P1\", \"P2\", \"P2\", \"P2\"), eval123 = c(1, 2, 2, 2, 2, 1))\n\n\n  Participante eval123\n1           P1       1\n2           P1       2\n3           P1       2\n4           P2       2\n5           P2       2\n6           P2       1\n\nTidyr: pivot_longer y pivot_wider\nPodemos convertir de un formato a otro a partir de los comando pivot_longer para convertir al formato long y pivot_wider para convertir a formato wide.\n\nShow code\nwide <- data.frame(participante = c(\"P1\",\"P2\"), ev1 = c(1,2), ev2 = c(2,2), ev3 = c(2,1))\nwide\n\n\n  participante ev1 ev2 ev3\n1           P1   1   2   2\n2           P2   2   2   1\n\n\nShow code\nlibrary(tidyr)\nlong <- wide %>%\n  pivot_longer(-participante)\nlong\n\n\n# A tibble: 6 × 3\n  participante name  value\n  <chr>        <chr> <dbl>\n1 P1           ev1       1\n2 P1           ev2       2\n3 P1           ev3       2\n4 P2           ev1       2\n5 P2           ev2       2\n6 P2           ev3       1\n\n\n\n\n",
      "last_modified": "2021-12-17T22:27:51+00:00"
    },
    {
      "path": "index.html",
      "title": "R Intersemestral 2022",
      "description": "Bienvenida al curso Intersemestral de Rstat 2022\n",
      "author": [],
      "contents": "\nDinámica del curso\nHoras síncronas: Se impartirá, del 13 al 17 de diciembre de 2021 en un horario de 16:00 a 20:00 horas. En estas sesiones se revisará el temario del curso.\nHoras asíncronas: Tiempo dedicado para la instalación del software y para el desarrollo de sus proyectos de análisis de datos.\nTemario del curso\nIntroducción a la programación y a R\n1.1 Configuración R y R-studio y lógica de programación\n1.2 Comandos básicos, interfaz de R-studio, ambiente\nOperadores y estructuras de datos en R\n2.1 Aritmética y operaciones lógicas en R\n2.2 Estructura de datos orientada a objetos o tabulación de datos\nProgramación de análisis de datos con R\n3.1 Manejo de variables y visualización de datos\n3.2 Estadística descriptiva en R: moda, media, mediana, desviación estándar, etc.\n3.3 Supuestos de estadística paramétrica vs. no-paramétrica\n3.4 Correlación y regresión lineal\n3.5 Comparativa entre poblaciones\nProyecto de análisis de datos\n4.1 Planeación y desarrollo del proyecto\n4.2 Presentación de proyectos\n\n",
      "last_modified": "2021-12-17T22:27:52+00:00"
    },
    {
      "path": "introduccion_programacion.html",
      "title": "1.1 Introducción a la Programación",
      "description": "Introducción a la programación con R\n",
      "author": [
        {
          "name": "Ana González",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nIntroducción a la Programación\nLas computadoras ejecutan órdenes en un formato que les es entendible, estas órdenes se agrupan en lo que nosotros conocemos como un programa, o software, el cual se divide en dos partes dependiendo de su formato:\nsiendo uno el de representación interna de los programas, lenguaje máquina o código ejecutable;\ny el de presentación externa, archivo o un conjunto de archivos que puede o no estar en un formato que pueda ser visto o leído por el usuario (formato que respeta reglas).\nEste conjunto de instrucciones partirá de un estado inicial a un estado final, o en otras palabras de un problema inicial a su resolución. Cuando se tienen estas problemáticas se usan estos programas para hallar la solución y muchas veces ya hay en existencia software que cumplen con distintos objetivos así que solo sería cuestión de tomar el que te funcione, pero en ocasiones estos pueden no acoplarse a tu situación específica por lo que se puede elaborar uno propio y así realizar la programación para la resolución desde tu situación inicial, pero se debe de comprender que no es solo el realizar código, sino que hay más trabajo detrás para que lo que se pretende crear sea funcional dependiendo de tus objetivos.\nSe debe de conocer mucha información para llegar a estos planteamientos como lo serían: transformar el problema inicial en un algoritmo, representación gráfica por medio de diagrama de flujo, introducir el lenguaje con pseudocódigo y por último realizar el programa.\nAlgoritmos\nUn algoritmo constituye una lista bien definida, ordenada y finita de operaciones que nos permitirá encontrar solución al problema comenzando desde su estado inicial hasta el estado final. Para describir los algoritmos usualmente de realiza en tres niveles:\nnivel alto,\nformal y\nde implementación.\nLas etapas de desarrollo de un algoritmo con base lógica:\nPrimero se deberá de definir el propósito, el problema que se quiere resolver y lo que pretende lograr con su solución, para luego analizar el problema y sus características para determinar sus entradas y salidas; y ver si ya existen soluciones al problema. A continuación, se deberá de diseñar el planteamiento de la solución donde se puedan usar diagramas de flujo y pseudocódigo. Ya como último paso es la implementación donde se realiza o se ve ya concretado el programa.\nDiagramas de Flujo\nSon utilizados para poder ordenar los pasos que a seguir, o acciones a realizar, presentado la información de manera clara sin necesidad de conocimientos mayores de programación. Estos diagramas se leen de arriba a abajo y están compuestos por bloques que son conectados a través de flechas que darán sentido.\nUn bloque específico para el inicio y el final.\nInicio FinalPara las operaciones de entrada o salida se usan paralelogramos.\nEntrada SalidaPara hacer asignaciones serán rectangulares o cuadrados.\nAsignaciónUna decisión con base en una expresión lógica se usará un bloque en forma de rombo.\nExpresión LógicaPseudocódigo\nEl pseudocódigo, o falso lenguaje, estará compuesto por palabras con un cierto formalismo con los cuales se pretende describir el funcionamiento de un programa. Se utiliza tanto lenguaje común como instrucciones de programación para la explicación de estructuras básicas para que el programador pueda focalizarse en los aspectos lógicos de la solución del problema.\nPara describir las instrucciones de los algoritmos se usarán en el pseudocódigo las estructuras de control; las cuales son cuatro:\nSecuencial\nInstrucciones que se ejecutan en el orden indicado por los índices: de arriba abajo, una después de la otra.\n\nSelectiva\nExpresan las elecciones que se hacen durante el proceso de resolución del problema\nSelectiva simple: Al realizar el cálculo lógico solo se ejecutarán las instrucciones si el resultado es verdadero. Palabras clave: si, entonces y fin sí.\nSelectiva doble (alternativa): Al realizar el cálculo de la expresión lógica tanto para el resultado falso como el verdadero se ejecutarán instrucciones.\nSelectiva múltiple: Anidar condiciones lógicas mutuamente excluyentes.\nSelectiva casos (múltiple): Cuando el mismo valor se compara con varios valores. A un valor se le compara con los existentes donde si hay un valor igual se aplicarán instrucciones, pero si no es así se aplican las instrucciones diferentes.\n\n\nIterativa\nEl ejecutar un grupo de instrucciones más de una vez así se podrán ejecutar varias veces una misma parte del código. Ejemplos serían:\nEstructura iterativa mientras (while).\nEstructura iterativa repetir (repeat).\nEstructura iterativa para (for).\n\n\nAnidamiento\nUna iterativa en otra.\n\n\nReferencias\n\nJuganaru, M. M. (2014). Introducción a la programación. Grupo Editorial Patria.\nPsycoding. (27 de mayo 2020). Videos [Página de Facebook]. Facebook. Recuperado el 11 de diciembre de 2021 de https://www.facebook.com/108380504188578/videos/614401312494378\n–\n\n\n\n",
      "last_modified": "2021-12-17T22:27:52+00:00"
    },
    {
      "path": "manejo_de_variables.html",
      "title": "Manejo de variables",
      "author": [
        {
          "name": "Juan Díaz",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nManejo de variables\nEn algunas ocasiones será necesario que manipulemos y manejemos nuestras variables, ya sea para ejecutar algún análisis estadístico, aplicar alguna función, generar algún plot, etc. Este tipo de modificaciones se puede realizar a través de r-base, sin embargo una alternativa es utilizar dplyr.\nDplyr\nUna importante contribución del paquete dplyr es que proporciona una “gramática” (particularmente verbos) para la manipulación y operaciones con data frames. Con esta gramática podemos comunicar mediante nuestro código que es lo que estamos haciendo en los data frames a otras personas (asumiendo que conozcan la gramática). Esto es muy útil, ya que proporciona una abstracción que anteriormente no existía. Por último, cabe destacar que las funciones del paquete dplyr son muy rápidas, puesto que están implementadas con el lenguaje C++.\nLas funciones de dplyr funcionan con datos ordenados en los que cada variable es una columna y cada caso es una fila. A continuación trabajaremos con algunas de sus funciones principales y como hacer su simil en r base\nSelect\nCon la función select podemos seleccionar columnas de un data frame:\n\n\nlibrary(tidyverse)\nData <- iris\nData_recortada_1 <- select(Data, Petal.Length, Petal.Width)\n\n\n\nEjercicio 1\nCómo harías lo anterior con r base? sube tu respuesta al slack\nRespuesta\n\n\nData_recortada_2 <- Data[3:4]\n\n\n\nFilter\nLa función filter nos permite filtrar filas según una condición\n\n\nData_filtrada_1 <- filter(Data_recortada_1, Petal.Length > 1.4)\n\n\n\nEjercicio 2\nCómo harías lo anterior con r base? sube tu respuesta al slack\nRespuesta\n\n\nData_filtrada_2 <- Data_recortada_2[Data_recortada_2[1]>1.4,]\n\n\n\nArrange\nLa función arrange() se utiliza para ordenar las filas de un data frame de acuerdo a una o varias columnas/variables.\n\n\nData_ordenada_1 <- arrange(Data_filtrada_1, Petal.Length)\nData_ordenada_2 <- Data_filtrada_2[order(Data_filtrada_2$Petal.Length),]\n\n\n\nRename\nRenombra variables\n\n\nData_renombrada_1 <- rename(Data_ordenada_1, \n                            Petalo_longitud = Petal.Length,\n                            Petalo_ancho = Petal.Width)\nData_renombrada_2 <- Data_ordenada_2\ncolnames(Data_renombrada_2) <- c(\n  \"Petalo_longitud\", \"Petalo_ancho\")\n\n\n\nMutate\nA menudo, tendremos la necesidad de crear nuevas variables que se calculan a partir de variables existentes,mutate() nos proporciona una interface clara para realizar este tipo de operaciones.\n\n\nData_agregada_1 <- mutate(Data_renombrada_1, \n                            Area = Petalo_longitud * Petalo_ancho)\n\n\n\nEjercicio 3\nCómo harías lo anterior con r base? sube tu respuesta al slack\nRespuesta\n\n\nArea <- Data_renombrada_2$Petalo_longitud * Data_renombrada_2$Petalo_ancho\nData_agregada_2 <- cbind(Data_renombrada_2, Area)\n\n\n\nSummarise\nLa función summarise() funciona de forma análoga a la función mutate, excepto que en lugar de añadir nuevas columnas crea un nuevo data frame.\n\n\nData_resumida_1 <- summarise(Data_renombrada_1, \n                           media_longidud =     \n                             mean(Petalo_longitud),\n                           media_ancho =\n                             mean(Petalo_ancho))\n\n\n\nGroup by\nLa función group_by() agrupa un conjunto de filas de acuerdo con los valores de una o más columnas o expresiones.\n\n\nData_agrupada <- group_by(Data, Species)\n\n\n\nEsta funcion resulta muy util al combinarse con otras, por ejemplo la función summarise, pero antes de eso debemos saber que es un pipe\nPipe\nEl operador pipeline %>% es útil para concatenar múltiples dplyr operaciones.\n\n\nData_agrupada <- group_by(Data, Species) %>% \n  summarise(mean_lenght = mean(c(Sepal.Length, Petal.Length)),\n            mean_width = mean(c(Sepal.Width, Petal.Width)))\n\n\n\nvisualización de datos\nGraficos en R base\nR nos proporciona varias funciones que permiten generar gráficos de diferentes tipos, la siguiente tabla muestra algunas de estas funciones y el gráfico que generan cada una:\nFunción\nTipo de grafico\nboxplot()\nGráfico de barras\nstripchart()\nGráfico de bandas\nbarplot()\nGráfico de barras\nplot()\nGráfico de lineas\npie()\nGráfico de pastel\nqqplot()\nGráfico de quantile-quantile\nhist()\nHistogramas\nTodos estos graficos pueden ser modificados a través de diferentes parametros, a continuación mostraremos algunos:\n\n\nPlot_1 <- qqplot(Data$Sepal.Length, Data$Sepal.Width)\n\n\n\nPlot_1 <- qqplot(Data$Sepal.Length, Data$Sepal.Width,\n                 main=\"Main title\")\n\n\n\nPlot_2 <- qqplot(Data$Sepal.Length, Data$Sepal.Width,\n                 main=\"Main title\",\n               xlab=\"X axis title\")\n\n\n\nPlot_3 <- qqplot(Data$Sepal.Length, Data$Sepal.Width,\n                 main=\"Main title\", \n               xlab=\"X axis title\", \n               ylab=\"Y axis title\")\n\n\n\nPLot_4 <- qqplot(Data$Sepal.Length, Data$Sepal.Width,\n                 main=\"Main title\",\n               xlab=\"X axis title\",\n               ylab=\"Y axis title\",\n               sub=\"Sub-title\")\n\n\n\nPlot_5 <- qqplot(Data$Sepal.Length, Data$Sepal.Width,\n                 main=\"Main title\",\n               xlab=\"X axis title\",\n               ylab=\"Y axis title\",\n               sub=\"Sub-title\",\n               col.main=\"red\", col.lab=\"blue\", col.sub=\"black\")\n\n\n\nPlot_6 <- qqplot(Data$Sepal.Length, Data$Sepal.Width, \n                 main=\"Main title\",\n               xlab=\"X axis title\",\n               ylab=\"Y axis title\",\n               sub=\"Sub-title\",\n               col.main=\"red\", col.lab=\"blue\", col.sub=\"black\",\n               cex.main=2, cex.lab=1.7, cex.sub=1.2)\n\n\n\n\n\n\n\n",
      "last_modified": "2021-12-17T22:27:54+00:00"
    },
    {
      "path": "parametrica.html",
      "title": "3.3 Supuestos de estadística paramétrica vs. no-paramétrica",
      "description": "Supuestos de la estadística paramétrica y no paramétrica con ejemplos\n",
      "author": [
        {
          "name": "Azalea Reyes-Aguilar",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nEstadística aplicada de acuerdo a tres criterios:por su alcance u objetivos del análisis\npor su relación entre variables y número de variables\npor las características de las variables (datos)\nCriterios para decidir las estrategías estadísticas\n\nPremisas para usar estadística paramétrica1. Las observaciones deben ser independiente | muestreo probabilístico.\n2. Las variables deben ser medidas por lo menos en escala de intervalo, para las operaciones aritméticas.\n3. Las poblaciones deben provenir de universos cuya distribución siga una curva normal.\n4. Las poblaciones deben tener la misma varianza, aunque es suficiente con saber la tasa de sus varianzas.F-test (razón de varianzas)\nLevene\nBartlett\nTest de Brown-Forsyth\nTest de Fligner-Killeen\n\nEXTRA\n\n\nEstadística aplicada de acuerdo a tres criterios:\npor su alcance u objetivos del análisis\nDescriptiva\nInferencial\npor su relación entre variables y número de variables\nUnivariada\nBivariada\nMultivariada\npor las características de las variables (datos)\nParamétrica\nNo-Paramétrica\nCriterios para decidir las estrategías estadísticas\nCuál es el objetivo de la investigación?\nCuál es el nivel de medición de las variables?\nCuál fue la estrategía de muestreo empleada?\nPremisas para usar estadística paramétrica\n1. Las observaciones deben ser independiente | muestreo probabilístico.\nProbabilístico\nFigure from https://scribber.comNO-Probabilístico\nFigure from https://scribber.com2. Las variables deben ser medidas por lo menos en escala de intervalo, para las operaciones aritméticas.\nNiveles de medición\nFigure from https://https://www.mymarketresearchmethods.com3. Las poblaciones deben provenir de universos cuya distribución siga una curva normal.\nMuchos fenómenos que podemos medir tanto en las ciencias exactas como las sociales de asemejan en su frecuencia a esta distribución.\nLa distribución normal tiene ciertas propiedades matemáticas que nos permiten predecir qué proporción de la población (estadística) caerá dentro de cierto rango si la variable tiene distribución normal, media y desviación estándar\nVarios tests de significancia de diferencia entre conjuntos/grupos de datos asumen que los datos del tienen una distribución normal.\ncurva normal\nFigure from https://bookdown.org/Vamos a hacer una prueba en R con los datos iris\n\nShow code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(forcats)\n\n\n\n\nShow code\n## custom colors\nmy_pal <- rcartocolor::carto_pal(n = 8, name = \"Bold\")[c(1, 3, 7, 2)]\n\nq_pal <- colorspace::lighten(rcartocolor::carto_pal(\n  n = 4, name = \"Geyser\")[c(2, 1, 4, 3)], .6)\n\ntheme_flip <- theme(\n    axis.text.x = element_text(face = \"plain\", size = 22),\n    axis.text.y = element_text(face = \"bold\", size = 26),\n    panel.grid.major.x = element_line(color = \"grey90\", size = .6),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"top\", \n    legend.text = element_text(size = 18),\n    legend.title = element_text(face = \"bold\", size = 18, margin = margin(b = 25))\n  )\n\niris_l <- iris %>% \n  pivot_longer(!Species, names_to = \"caracteristica\", values_to = \"score\") \n\n\n\n\nShow code\nggplot(iris_l, aes(score, fct_rev(caracteristica), color = caracteristica, fill = caracteristica)) + \n  coord_cartesian(clip = \"off\") +\n  scale_y_discrete(expand = c(.07, .07)) +\n  scale_color_manual(values = my_pal, guide = \"none\") +\n  scale_fill_manual(values = my_pal, guide = \"none\") +\n  theme_flip + \n  labs(title = \"características de la flor\", x= \"tamaño\", y = \" \") +\n  ggridges::stat_density_ridges(\n    aes(fill = factor(stat(quantile))),\n    geom = \"density_ridges_gradient\", calc_ecdf = TRUE, quantiles = 4, \n    color = \"black\", size = 1) +\n  scale_fill_manual(values = q_pal, name = \"Quartile:\") +\n  guides(fill = guide_legend(override.aes = list(color = \"transparent\"))) +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        axis.title.y = element_text(size = 18, face=\"bold\"),\n        axis.title.x = element_text(size = 18, face=\"bold\"),\n        axis.text = element_text(size = 10, face=\"bold\")) \n\n\n\n\nCalcular la cantidad de datos dentro de las dos primeras desviaciones\n\nShow code\nsum( \n    iris$Sepal.Width <  mean(iris$Sepal.Width) + sd(iris$Sepal.Width) \n    &\n    iris$Sepal.Width > mean(iris$Sepal.Width) - sd(iris$Sepal.Width) \n)/nrow(iris)\n\n\n[1] 0.6733333\n\n… o bien, podemos usar pruebas estadísticas para averiguar si los datos siguen una distribución de la curva normal\nPrueba de Hipótesis: H0 = no diferencias con la curva normal Ha = diferencias con la curva normal\n\nShow code\nshapiro.test(iris$Petal.Length)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  iris$Petal.Length\nW = 0.87627, p-value = 7.412e-10\nShow code\nshapiro.test(iris$Petal.Width)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  iris$Petal.Width\nW = 0.90183, p-value = 1.68e-08\nShow code\nshapiro.test(iris$Sepal.Length)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  iris$Sepal.Length\nW = 0.97609, p-value = 0.01018\nShow code\nshapiro.test(iris$Sepal.Width)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  iris$Sepal.Width\nW = 0.98492, p-value = 0.1012\n\n… otras opciones\n\nShow code\ntseries::jarque.bera.test(iris$Sepal.Width)\n\n\n\n    Jarque Bera Test\n\ndata:  iris$Sepal.Width\nX-squared = 2.6974, df = 2, p-value = 0.2596\nShow code\ntseries::jarque.bera.test(iris$Sepal.Length)\n\n\n\n    Jarque Bera Test\n\ndata:  iris$Sepal.Length\nX-squared = 4.4859, df = 2, p-value = 0.1061\nShow code\ntseries::jarque.bera.test(iris$Petal.Width)\n\n\n\n    Jarque Bera Test\n\ndata:  iris$Petal.Width\nX-squared = 11.416, df = 2, p-value = 0.003318\nShow code\ntseries::jarque.bera.test(iris$Petal.Length)\n\n\n\n    Jarque Bera Test\n\ndata:  iris$Petal.Length\nX-squared = 14.023, df = 2, p-value = 0.0009013\n\n… otras, las de la libraría nortest\nnortest::ad.test(data)\nnortest::cvm.test(data)\nnortest::lillie.test(data)\nnortest::pearson.test(data)\nnortest::sf.test(data)\n4. Las poblaciones deben tener la misma varianza, aunque es suficiente con saber la tasa de sus varianzas.\nLa varianza es una medida de dispersión que representa la variabilidad de una serie de datos respecto a su media. Formalmente se calcula como la suma de los residuos al cuadrado divididos entre el total [-1] de observaciones.\n\\[\n\\sigma^2 = \\frac{\\sum(x_i -\\mu)^2}{n - 1} \n\\]\nEl cumplimiento del supuesto de varianza constante se conoce como homocedasticidad y el incumplimiento como heterocedasticidad.\nFigure from https://www.researchgate.net/Prueba de Hipótesis: H0 = no diferencias en las varianzas | homocedasticidad Ha = diferencias en las varianzas | heterocedasticidad\n\nShow code\naggregate(Petal.Length ~ Species, data = iris, FUN = var)\n\n\n     Species Petal.Length\n1     setosa   0.03015918\n2 versicolor   0.22081633\n3  virginica   0.30458776\n\n\nShow code\niris_v <- filter(.data = iris, Species %in% c(\"versicolor\", \"virginica\"))\n\nggplot(data = iris_v, aes(x = Species, y = Petal.Length, colour = Species)) +\n  geom_boxplot() +\n  geom_point() +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nShow code\naggregate(Petal.Length ~ Species, data = iris_v, FUN = var)\n\n\n     Species Petal.Length\n1 versicolor    0.2208163\n2  virginica    0.3045878\n\nF-test (razón de varianzas)\nPara distribuciones normales, dos poblaciones\n\nShow code\nvar.test(x = iris[iris$Species == \"versicolor\", \"Petal.Length\"],\n         y = iris[iris$Species == \"virginica\", \"Petal.Length\"] )\n\n\n\n    F test to compare two variances\n\ndata:  iris[iris$Species == \"versicolor\", \"Petal.Length\"] and iris[iris$Species == \"virginica\", \"Petal.Length\"]\nF = 0.72497, num df = 49, denom df = 49, p-value = 0.2637\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.411402 1.277530\nsample estimates:\nratio of variances \n         0.7249678 \n\nLevene\nSe caracteriza, además de por poder comparar 2 o más poblaciones, por permitir elegir entre diferentes estadísticos de centralidad :mediana (por defecto), media, media truncada. Esto es importante a la hora de contrastar la homocedasticidad dependiendo de si los grupos se distribuyen de forma normal o no.\n\nShow code\nlibrary(car)\nleveneTest(y = iris$Petal.Length, group = iris$Species, center = \"median\")\n\n\nLevene's Test for Homogeneity of Variance (center = \"median\")\n       Df F value    Pr(>F)    \ngroup   2   19.48 3.129e-08 ***\n      147                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nBartlett\nPermite contrastar la igualdad de varianza en 2 o más poblaciones sin necesidad de que el tamaño de los grupos sea el mismo, pero es mejor para distribuciones normales.\n\nShow code\na <- iris[iris$Species == \"versicolor\", \"Petal.Length\"]\nb <- iris[iris$Species == \"virginica\", \"Petal.Length\"]\nbartlett.test(list(a,b))\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  list(a, b)\nBartlett's K-squared = 1.249, df = 1, p-value = 0.2637\nShow code\nbartlett.test(iris$Sepal.Length ~ iris$Species)\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  iris$Sepal.Length by iris$Species\nBartlett's K-squared = 16.006, df = 2, p-value = 0.0003345\n\nTest de Brown-Forsyth\nEs equivalente al test de Levene cuando se emplea la mediana como medida de centralidad.\n\nShow code\nlibrary(HH)\nhov(iris$Sepal.Length ~ iris$Species)\n\n\n\n    hov: Brown-Forsyth\n\ndata:  iris$Sepal.Length\nF = 6.3527, df:iris$Species = 2, df:Residuals = 147, p-value =\n0.002259\nalternative hypothesis: variances are not identical\n\nTest de Fligner-Killeen\nSe trata de un test no paramétrico que compara las varianzas basándose en la mediana. Es también una alternativa cuando no se cumple la condición de normalidad en las muestras.\n\nShow code\na <- iris[iris$Species == \"versicolor\",\"Petal.Length\"]\nb <- iris[iris$Species == \"virginica\",\"Petal.Length\"]\nfligner.test(x = list(a,b))\n\n\n\n    Fligner-Killeen test of homogeneity of variances\n\ndata:  list(a, b)\nFligner-Killeen:med chi-squared = 1.2624, df = 1, p-value =\n0.2612\n\nEXTRA\nCalculo de los residuales con lm y probar la prueba Breush-Pagano Durbin-Watson\nlibrary(lmtest)\nbptest(LM)\nMétodos de corrección de la varianza no constante\nCorregir la no linealidad Corregir las observaciones influyentes Mínimos cuadrados ponderados\n\n\n\n",
      "last_modified": "2021-12-17T22:28:00+00:00"
    },
    {
      "path": "visualizacion_de_datos.html",
      "title": "Visualización de Datos",
      "description": "Visualización de datos con ggplot2\n",
      "author": [
        {
          "name": "Juan Díaz",
          "url": {}
        },
        {
          "name": "Edgar Morales",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nElementos de ggplot2\nSintaxis\nEstética\nMultiples geometrías\nFlexibilidad\nGráficos en Objetos\nGráficos impresindiblesBoxplot\nGraficos de Barras\nHistograma\nGráficos de línea\nGráficos de dispersión\nExtra tip\n\n\nRepresentar los datos que analizamos es un paso crucial para entenderlos y tomar decisión al respecto de lo que veamos.\nEn ocasiones una buena representación puede ahorrarnos muchos dolores de cabeza al realizar nuestro análisis.\nR cuenta con una batería de instrucciones para generar gráficos de forma rápida y funcional. Sin embargo para lograr gráficos con mayor control y que nos permitan representar los datos de forma fácil y con mas control la librería ggplot2 es una gran opción.\nRecuerda que puedes instalar esta librería con install.packages('ggplot2'). Esta también viene incluida dentro del paquete tidyverse\nEl paquete ggplot2 creado por Hadley Wickham está inspirado en el concepto de la gramática de gráficos. Esta teoría propuesta por Leland Wilkinson en el libro The Lenguage of Graphics, propone separa los componentes gráficos de los componentes estéticos.\nFacilitando entonces una sintaxis replicable y modular que se puede expandir con facilidad.\nEsta gramática de datos es un conjunto de instrucciones que permite la combinación de comandos (como si fueran sustantivos o verbos) permitiendo generar un gráfico.\nEl fin último de estas reglas es poder mapear nuestors datos en atributos estéticos y/o representaciónes geométricas de los mismos.\nElementos de ggplot2\nEl paquete ggplot2 tiene elementos basados en la gramática de datos.\nData: Datos que queremos representar con el gráfico\nAesthetic mapping: Características estéticas que representarán los valores de los datos\nGeom: Objetos geométricos (puntos, líneas, polígonos, áreas…) que formarán el gráfico.\nStat: Transformaciones estadísticas que podemos aplicar a los datos que representaremos\nScale: Escalas y características asociadas a los datos.\nCoord: El sistema de coordenadas donde se representan las figuras geométricas\nFaceting: Se refiere a elementos que están formados de varios planos\nTodos estos elementos estarán representados por elementos del paquete.\nSintaxis\nCrearemos un boxplot a partir de los datos del dataset iris\n\nShow code\nlibrary(ggplot2)\n\n\nggplot(data = iris, mapping = aes(x  = Species, y = Petal.Width)) +\n  geom_boxplot()\n\n\n\n\n\nUn boxplot nos da información de la población ya que permite ver la dispersión de los datos por los quantiles representados por las cajas, la mediana definida por la línea a mitad de la caja, y hasta los outliers visibles mediante puntos mas allá de los bigotes\nDe momento no es un gráfico muy bonito, pero lo importante en esta ocasión son las partes que utilizamos\nEl parámetro data recibe justamente los datos a representar\nmapping es un parámetro que permite mapear variables del dataset iris a los componentes del gráfico. En este caso el eje de las X\nEl símbolo + funciona como un pipe de forma similar a el pipe de maggrit y encadena cada instrucción de ggplot\nPor último tenemos la instrucción geom_boxplot() que determina la geometría que tendra este gráfico.\n\nEs muy importante considerar que solo dentro de aes() se puede llamar a las variables que se encuentran dentro del dataset para que sean mapeadas a un color, una figura o un texto dentro del plot.\n\nCon esto procesado subamos la complejidad.\nEstética\nPodemos agregar entonces elementos estéticos que mejoren la representación de estos datos\n\nShow code\nggplot(data = iris, mapping = aes(x  = Species, y = Petal.Width, color = Species, fill = Species)) +\n  geom_boxplot() +\n  scale_fill_viridis_d(alpha = 0.3) +\n  scale_color_viridis_d() +\n  labs(\n    title = \"Comparación del ancho del petalo entre las especies\",\n    subtitle = \"Setosa - Versicolor - Virginica\", \n    x = \"Especies\",\n    y = \"Ancho del Petalo (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\nPuntos relevantes:\nNuevas características mapeadas color y fill. Como su nombre lo indica fill se refiere al relleno de las cajas y color se refiere al color de los trazos.\nscale_fill_viridis_d y scale_color_viridis_d modifican los colores y el rellenado. Por default ggplot usa un conjunto de colores, sin embargo se pueden cambiar con comandos como estos que usan el set de colores Viridis. También se pueden definir colores de forma manual con scale_color_manual y scale_fill_manual y existen otras paletas de colores.\nLabs permite escribir los diferentes letreros correspondientes al gráfico\ntheme_minimal() aplica un tema que puede tener diferentes diseños, en este caso específico es un tema que remueve muchos de los elementos de la gráfica justo como el fondo o algunas marcas.\n\nViridis es una paleta de colores que permite representar valores discretos y continuos, ademas tiene varios conjuntos de colores como magma, inferno, cividis y mas puedes usar ?viridis para mas información\nMultiples geometrías\n\nShow code\nggplot(data = iris, mapping = aes(x  = Species, y = Petal.Width, color = Species)) +\n  geom_boxplot() +\n  geom_jitter(alpha=0.2) +\n  scale_color_viridis_d() +\n  labs(\n    title = \"Comparación del ancho del petalo entre las especies\",\n    subtitle = \"Setosa - Versicolor - Virginica\", \n    x = \"Especies\",\n    y = \"Ancho del Petalo (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\nPuntos relevantes:\nSe incluye la geometría geom_jitter que dibuja un puntos para cada valor de Petal.Width pero dispersandolos un poco en el eje de las x\n\nPodríamos mapear en esta nueva geometría otro de los valore del dataset. Aunque en escencia puede que no nos aporte nada pero lo haremos como prueba de concepto.\n\n\nShow code\nggplot(data = iris, mapping = aes(x  = Species, y = Petal.Width, color = Species)) +\n  geom_boxplot() +\n  geom_jitter(aes(x = Species, y = Petal.Length), alpha=0.2) +\n  scale_color_viridis_d() +\n  labs(\n    title = \"Comparación del ancho del petalo entre las especies\",\n    subtitle = \"Setosa - Versicolor - Virginica\", \n    x = \"Especies\",\n    y = \"Ancho del Petalo (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\nComo mencionaba, no hay mucho sentido en este usar otra variable en esta gráfica pero es una buena prueba de concepto.\nFlexibilidad\nLa creación de una gráfica puede tener diferentes configuraciones pero obtener el mismo resultado. En particular podemos tener variaciones en el lugar donde se definen los datos y/o las variables que se mapean a las propiedades del gráfico, por ejemplo:\n\nShow code\nggplot(InsectSprays, aes(x = spray, y = count, fill = spray)) +\n  geom_bar(stat='summary', fun='mean') +\n  scale_fill_brewer(palette = 'RdYlBu') +\n  theme_classic()\n\n\n\n\n\nOtra forma de determinar los colores es mediante las paletas de colorbrewer que se puede utilizar con las funciones scale_fill_brewer() y scale_color_brewer(). Para ver las paletas disponibles podemos visitar colorbrewer2.org\nEste gráfico utiliza la sintaxis mas común donde los datos y las variables se definen en la primera función ggplot(). Esto permite heredar la información de ggplot al resto de las geometrías o funciones. En la geometría en ocasiones no se agrega nada y en otras parámetros necesarios para esa geometría. En esta caso stat=\"summary\" permite mostrar en la geometría geom_bar un resumen usando la función mean definida en el parámetro fun=\"mean\".\n\ntheme_classic es otro tema que estamos aplicando muy parecido a theme_minimal.\n\nOtra forma de generar este mismo gráfico es:\n\nShow code\nggplot(InsectSprays) +\n  geom_bar( aes(x = spray, y = count, fill = spray), stat='summary', fun='mean') +\n  scale_fill_brewer(palette = 'RdYlBu') +\n  theme_classic()\n\n\n\n\nEn este caso podemos ver que se genera el mismo comando, sin embargo ahora las variables se mapean en la geometría y sin embargo no cambia el gráfico. Esta forma es menos usada pero permite una mayor flexibilidad al momento de mapear variables en las geometrías, es decir al proceder de esta forma podríamos mapear diferentes variables en diferentes geometrías.\nLa última variación permite definir una fuente de datos a nivel geometría\n\nShow code\nggplot() +\n  geom_bar(data = InsectSprays, aes(x = spray, y = count, fill = spray), stat='summary', fun='mean') +\n  scale_fill_brewer(palette = 'RdYlBu') +\n  theme_classic()\n\n\n\n\nEn este caso es necesario poner el nombre del parámetro para definir la fuente de datos. Los datos pueden ser usados en funciones posteriores y puede cambiar en cada una de ellas.\nGráficos en Objetos\nCon ggplot2 se pueden guardar los gráficos en objetos y después estos objetos pueden ser modificados\nPor ejemplo en esta instrucción generamos el gráfico\n\nShow code\nplot_orange <- ggplot(Orange, aes(x = age, y = circumference , color = Tree)) +\n  geom_point()\n\n\n\nY lo mostramos acá\n\nShow code\nplot_orange\n\n\n\n\nSin embargo podemos modificarlo posteriormente a su creación:\n\nShow code\nplot_orange +\n  theme_minimal()\n\n\n\n\nIncluso podríamos agregar nuevas geometrías\n\nShow code\nplot_orange +\n  geom_line() +\n  theme_minimal()\n\n\n\n\nGráficos impresindibles\nBoxplot\nEs un gráfico que muestra diferentes poblaciones y la dispersión de cada una de ellas\n\nShow code\nsleep_boxplot <- ggplot(sleep, aes(x = group, y = extra, color=group)) +\n  geom_boxplot() +\n  scale_color_viridis_d(option='cvidis') +\n  theme_minimal()\n\nsleep_boxplot\n\n\n\n\nGraficos de Barras\nLos gráficos de barras tienen dos variantes, geom_bar y geom_col. La primera puede calcular la métrica a representar la segunda espera que la métrica este calculada:\ngeom_bar()\n\nShow code\ninsects_plot <- ggplot(InsectSprays, aes(x = spray, y = count, fill = spray)) +\n  geom_bar(stat='summary', fun='mean') +\n  scale_fill_brewer(palette = 'RdYlBu') +\n  theme_classic()\ninsects_plot\n\n\n\n\ngeom_col()\nEn este caso se calcula por fuera y ya que es compatible con dplyr podemos usarlo. Ademas podemos calcular otras métricas como la desviación estándar para luego calcular las barras de error.\n\nShow code\nInsectSprays %>% \n  group_by(spray) %>% \n  summarise(spray_mean = mean(count), spray_sd = mean(count)) %>% \n  ggplot(aes(x=spray, y=spray_mean, fill = spray)) +\n    geom_col() +\n    geom_errorbar(aes(ymin=spray_mean - spray_sd, ymax = spray_mean + spray_sd)) +\n    scale_fill_brewer(palette = 'RdYlBu') +\n    theme_classic()\n\n\n\n\nHistograma\nPermite ver la distribución de las poblaciones\n\nShow code\ntxhousing_plot <- ggplot(txhousing, aes(sales)) +\n  geom_histogram(bins = 30) +\n  theme_minimal()\ntxhousing_plot\n\n\n\n\nGráficos de línea\n\nShow code\norange_plot_line <- ggplot(Orange, aes(x = age, y = circumference , color = Tree)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal()\norange_plot_line\n\n\n\n\nGráficos de dispersión\n\nShow code\ntrees_plot <- ggplot(trees, aes(x = Volume, y = Height, size = Girth)) +\n  geom_point(alpha =0.5)\ntrees_plot\n\n\n\n\nExtra tip\nExisten funciones que permite unir las gráficas para su presentación una de ellas y probablemente la mas sencilla de usar sería patchwork\n\nShow code\nlibrary(patchwork)\n\norange_plot_line + trees_plot\n\n\n\n\n\nExisten otras librerías como cowplot o ExtraGrid pero patchwork es quiza la mas sencilla de ellas para mas información puedes revisar patchwork\n\nShow code\norange_plot_line + trees_plot / txhousing_plot\n\n\n\n\n\n\n\n",
      "last_modified": "2021-12-17T22:28:07+00:00"
    }
  ],
  "collections": []
}
